Search.setIndex({"docnames": ["index", "modules", "pysrc", "pysrc.debug", "pysrc.test", "pysrc.uhdl", "pysrc.uhdl.Demo", "pysrc.uhdl.Demo.Crossbar", "pysrc.uhdl.Demo.lwnoc", "pysrc.uhdl.core"], "filenames": ["index.rst", "modules.rst", "pysrc.rst", "pysrc.debug.rst", "pysrc.test.rst", "pysrc.uhdl.rst", "pysrc.uhdl.Demo.rst", "pysrc.uhdl.Demo.Crossbar.rst", "pysrc.uhdl.Demo.lwnoc.rst", "pysrc.uhdl.core.rst"], "titles": ["Welcome to UHDL\u2019s documentation!", "pysrc", "pysrc package", "pysrc.debug package", "pysrc.test package", "pysrc.uhdl package", "pysrc.uhdl.Demo package", "pysrc.uhdl.Demo.Crossbar package", "pysrc.uhdl.Demo.lwnoc package", "pysrc.uhdl.core package"], "terms": {"unifi": 0, "hardwar": 0, "descript": 0, "languag": 0, "python": 0, "xml": 0, "xls": 0, "verilog": [0, 9], "tcl": 0, "base": 0, "ip": 0, "perl": 0, "script": 0, "fop": 0, "get_config": 0, "pdp": 0, "packag": 1, "subpackag": 1, "debug": [1, 2], "submodul": [1, 2, 5, 6], "debug_file_nam": [1, 2], "modul": 1, "content": 1, "test": [1, 2, 9], "test_compon": [1, 2], "test_express": [1, 2], "test_funct": [1, 2], "test_port": [1, 2], "test_wir": [1, 2], "test_lwnoc": [1, 2], "test_name_si": [1, 2], "test_quick_start": [1, 2], "test_run_demo": [1, 2], "uhdl": [1, 2], "testcompon": [2, 4], "test_defin": [2, 4], "testexpress": [2, 4], "listexpressiontest": [2, 4], "multilistexpressiontest": [2, 4], "multisamelistexpressiontest": [2, 4], "oneopbitexpressiontest": [2, 4, 5, 9], "oneopexpressiontest": [2, 4], "oneopu1expressiontest": [2, 4], "twoopexpressiontest": [2, 4], "twosameopbitexpressiontest": [2, 4], "twosameopexpressiontest": [2, 4], "twosameopu1expressiontest": [2, 4], "test_and": [2, 4], "test_andlist": [2, 4], "test_bitand": [2, 4], "test_bitandlist": [2, 4], "test_bitor": [2, 4], "test_bitorlist": [2, 4], "test_bitxnor": [2, 4], "test_bitxnorlist": [2, 4], "test_bitxor": [2, 4], "test_bitxorlist": [2, 4], "test_combin": [2, 4], "test_cut": [2, 4], "test_equ": [2, 4], "test_great": [2, 4], "test_greaterequ": [2, 4], "test_invers": [2, 4], "test_less": [2, 4], "test_lessequ": [2, 4], "test_not": [2, 4], "test_notequ": [2, 4], "test_or": [2, 4], "test_orlist": [2, 4], "test_selfand": [2, 4], "test_selfor": [2, 4], "test_selfxnor": [2, 4], "test_selfxor": [2, 4], "testvalu": [2, 4], "errattrmismatchtest": [2, 4], "errattrtypewrongtest": [2, 4], "errbitsinvalidstrtest": [2, 4], "errbitsoverflowtest": [2, 4], "errcutexpsliceinvalidtest": [2, 4], "errexpintypewrongtest": [2, 4], "errlistexpneedmultioptest": [2, 4], "waitexcept": [2, 4], "testvari": [2, 4], "bitstest": [2, 4], "singlevartest": [2, 4], "test_inout": [2, 4], "test_input": [2, 4], "test_output": [2, 4], "test_paramet": [2, 4], "test_reg": [2, 4], "test_sint": [2, 4], "test_uint": [2, 4], "testassign": [2, 4], "test_assign_right": [2, 4], "test_assign_wrong": [2, 4], "testport": [2, 4], "setup_port_contain_ani": [2, 4], "test_equal_contain_ani": [2, 4], "test_equal_contain_wir": [2, 4], "test_expand": [2, 4], "test_not_equal_contain_ani": [2, 4], "test_not_equal_contain_wir": [2, 4], "test_reverse_contain_ani": [2, 4], "test_reverse_contain_wir": [2, 4], "testwir": [2, 4], "test_match": [2, 4], "test_not_equal_by_direct": [2, 4], "test_not_equal_by_nam": [2, 4], "test_not_equal_by_width": [2, 4], "test_one_direct": [2, 4], "test_revers": [2, 4], "testbas": [2, 4], "test_lwnocarb": [2, 4], "test_lwnocdec": [2, 4], "test_lwnocwrap": [2, 4], "test_lwnocxbar": [2, 4], "test_network": [2, 4], "test_basic_darb": [2, 4], "test_basic_ddec": [2, 4], "test_basic_dmst": [2, 4], "test_basic_dslv": [2, 4], "test_basic_dwrap": [2, 4], "cacul": [2, 4], "testnamesi": [2, 4], "test_unique_nam": [2, 4], "uniquenametestwrapp": [2, 4], "testrundemo": [2, 4], "test_crossbar": [2, 4], "demo": [2, 5], "core": [2, 5], "basicfunct": [2, 5], "compon": [2, 4, 5, 7, 8], "config": [2, 5], "connectionproperti": [2, 5], "custconfig": [2, 5], "except": [2, 5, 8], "extensiblefileobject": [2, 5], "fileprocess": [2, 5], "function": [2, 5], "internaltool": [2, 5], "lint": [2, 5], "oper": [2, 5], "root": [2, 5], "vcompon": [2, 5], "vfile": [2, 5], "variabl": [2, 5], "class": [4, 7, 8, 9], "methodnam": 4, "runtest": 4, "testcas": 4, "op": [4, 9], "param": [4, 5, 9], "hbound": [4, 9], "lbound": [4, 9], "exp_typ": 4, "mode": [4, 9], "crossbar": [5, 6], "mux_1tom": [5, 6], "mux_nto1": [5, 6], "lwnoc": [5, 6], "axiinterfac": [5, 6], "axiparam": [5, 6], "bascihdsk": [5, 6], "cmnarb": [5, 6], "credit": [5, 6], "darb": [5, 6], "darbdual": [5, 6], "ddec": [5, 6], "ddecdual": [5, 6], "dmst": [5, 6], "dslv": [5, 6], "dwrap": [5, 6], "topoedg": [5, 6], "topolog": [5, 6], "toponetwork": [5, 6], "toponod": [5, 6], "join_nam": [5, 9], "compil": [5, 9], "component_list": [5, 9], "creat": [5, 9], "create_all_vfil": [5, 9], "create_this_vfil": [5, 9], "expose_io": [5, 9], "generate_filelist": [5, 9], "generate_verilog": [5, 9], "get_circuit_list": [5, 9], "get_component_list": [5, 9], "get_io": [5, 9], "get_io_list": [5, 9], "input_list": [5, 9], "inter_sig_list": [5, 9], "io_list": [5, 9], "lvalue_list": [5, 9], "module_nam": [5, 9], "outer_lvalue_list": [5, 9], "output_list": [5, 9], "output_path": [5, 9], "param_list": [5, 9], "reg_list": [5, 9], "run_lint": [5, 9], "run_struct_check": [5, 9], "run_undriven_check": [5, 9], "var_list": [5, 9], "verilog_def": [5, 9], "verilog_inst": [5, 9], "verilog_outer_def_as_list": [5, 9], "wire_list": [5, 9], "param_contain": [5, 9], "iscompon": [5, 9], "uhdlconfig": [5, 9], "set_all_prior": [5, 9], "update_bi": [5, 9], "rich_ext_set_all_prior": [5, 9], "rich_ext_setattr": [5, 9], "uhdl_cfg_descriptor": [5, 9], "prioriti": [5, 9], "valu": [5, 9], "uhdl_cfg_rich_bool": [5, 9], "assignpair": [5, 9], "assign": [5, 9], "unitconnectionproperti": [5, 9], "componentconfig": [5, 9], "errassigntypewrong": [5, 9], "errattrmismatch": [5, 9], "errattrtypewrong": [5, 9], "errbitsinvalidstr": [5, 9], "errbitsvaloverflow": [5, 9], "errconstinwrong": [5, 9], "errcutexpsliceinvalid": [5, 9], "errexpintypewrong": [5, 9], "errlistexpneedmultiop": [5, 9], "errlogicsigattrwrong": [5, 9], "errneedbool": [5, 9], "erruhdl": [5, 9], "erruhdlstr": [5, 9], "errvarcmpwrong": [5, 9], "errwhenexpoperatewrong": [5, 9], "paramet": [5, 9], "get_md5": [5, 9], "line_prefix": [5, 9], "load": [5, 9], "save": [5, 9], "write": [5, 9], "write_tool_messag": [5, 9], "write_vers": [5, 9], "hashabletextblock": [5, 9], "clean": [5, 9], "get_hash": [5, 9], "wrap_text": [5, 9], "parambox": [5, 9], "versioncontrolblock": [5, 9], "check_vfil": [5, 9], "create_fil": [5, 9], "file_list_dedup": [5, 9], "refresh_directori": [5, 9], "relpath": [5, 9], "bitmask": [5, 9], "lca": [5, 9], "linkabl": [5, 9], "smartassign": [5, 9], "unpack": [5, 9], "getclsnamefromcl": [5, 9], "getclsnamefromobj": [5, 9], "info": [5, 9], "unconnect": [5, 9], "add": [5, 6, 8, 9], "and": [5, 9], "andlist": [5, 9], "bitand": [5, 9], "bitandlist": [5, 9], "bitor": [5, 9], "bitorlist": [5, 9], "bitxnor": [5, 9], "bitxnorlist": [5, 9], "bitxor": [5, 9], "bitxorlist": [5, 9], "case": [5, 9], "combin": [5, 9], "cut": [5, 9], "emptywhen": [5, 9], "equal": [5, 9], "fanout": [5, 9], "greater": [5, 9], "greaterequ": [5, 9], "invers": [5, 9], "less": [5, 9], "lessequ": [5, 9], "mul": [5, 9], "not": [5, 9], "notequ": [5, 9], "or": [5, 9], "orlist": [5, 9], "selfand": [5, 9], "selfor": [5, 9], "selfxnor": [5, 9], "selfxor": [5, 9], "sub": [5, 9], "when": [5, 9], "get": [5, 9], "set": [5, 9], "ancestor": [5, 9], "ancestors_cor": [5, 9], "father": [5, 9], "father_until": [5, 9], "father_until_compon": [5, 9], "father_until_not": [5, 9], "full_hier": [5, 9], "full_nam": [5, 9], "get_circuit": [5, 9], "hier": [5, 9], "name": [5, 6, 8, 9], "name_befor": [5, 9], "name_before_not": [5, 9], "name_until": [5, 9], "name_until_not": [5, 9], "set_circuit": [5, 9], "set_fath": [5, 9], "set_father_typ": [5, 9], "set_nam": [5, 9], "parse_ast": [5, 9], "vparamet": [5, 9], "create_uhdl_param": [5, 9], "vport": [5, 9], "create_uhdl_port": [5, 9], "file_list": [5, 9], "path": [5, 9], "top_path": [5, 9], "addexpress": [5, 9], "attribut": [5, 9], "op_nam": [5, 9], "op_str": [5, 9], "alwayscombexpress": [5, 9], "andexpress": [5, 9], "andlistexpress": [5, 9], "anyconst": [5, 9], "lstring": [5, 9], "rstring": [5, 9], "templat": [5, 9], "bitandexpress": [5, 9], "bitandlistexpress": [5, 9], "bitorexpress": [5, 9], "bitorlistexpress": [5, 9], "bitxnorexpress": [5, 9], "bitxnorlistexpress": [5, 9], "bitxorexpress": [5, 9], "bitxorlistexpress": [5, 9], "bit": [5, 9], "width": [5, 8, 9], "bundl": [5, 8, 9], "as_list": [5, 9], "connect": [5, 9], "exclud": [5, 9], "name_before_compon": [5, 9], "name_until_compon": [5, 9], "revers": [5, 9], "rvalu": [5, 9], "caseexpress": [5, 9], "bstring": [5, 9], "combineexpress": [5, 9], "constant": [5, 9], "cutexpress": [5, 9], "equalexpress": [5, 9], "express": [5, 9], "fanoutexpress": [5, 9], "greaterequalexpress": [5, 9], "greaterexpress": [5, 9], "groupvar": [5, 9], "iogroup": [5, 9], "verilog_assign": [5, 9], "verilog_outer_def": [5, 9], "iosig": [5, 9], "verilog_def_as_list": [5, 9], "verilog_outer_def_as_list_io": [5, 9], "inout": [5, 9], "input": [5, 9], "inverseexpress": [5, 9], "leftshift": [5, 9], "lessequalexpress": [5, 9], "lessexpress": [5, 9], "listexpress": [5, 9], "mulexpress": [5, 9], "multilistexpress": [5, 9], "multisamelistexpress": [5, 9], "notequalexpress": [5, 9], "notexpress": [5, 9], "oneopexpress": [5, 9], "oneopu1express": [5, 9], "orexpress": [5, 9], "orlistexpress": [5, 9], "output": [5, 9], "reg": [5, 9], "rightshift": [5, 9], "sint": [5, 9], "selfandexpress": [5, 9], "selforexpress": [5, 9], "selfxnorexpress": [5, 9], "selfxorexpress": [5, 9], "singlevar": [5, 9], "subexpress": [5, 9], "twoopexpress": [5, 9], "twosameopbitexpress": [5, 9], "twosameopexpress": [5, 9], "twosameopu1express": [5, 9], "uint": [5, 9], "check_rvalu": [5, 9], "des_connect": [5, 9], "src_connect": [5, 9], "valueroot": [5, 9], "var_nam": [5, 9], "whenexpress": [5, 9], "ohterwis": [5, 9], "then": [5, 9], "otherwis": [5, 9], "wire": [5, 9], "wiresig": [5, 9], "circuit": [5, 9], "smart_assign": [5, 9], "axi": [6, 8], "copi": [6, 8], "copy_revers": [6, 8], "axirevers": [6, 8], "basichdsk": [6, 8], "basichdskrevers": [6, 8], "cmnagemtx": [6, 8], "dcdtregslicem": [6, 8], "dcdtregslic": [6, 8], "syncfifo": [6, 8], "dmstaxi": [6, 8], "dslvaxi": [6, 8], "addr_tgt_id_map": [6, 8], "edg": [6, 8, 9], "init_logg": [6, 8], "network": [6, 8], "link": [6, 8], "adapt": [6, 8], "adapter_id": [6, 8], "arbit": [6, 8], "arbiter_id": [6, 8], "color": [6, 8], "create_vinst": [6, 8], "dst_num_limit": [6, 8], "get_vinst": [6, 8], "src_num_limit": [6, 8], "arbiterdu": [6, 8], "decod": [6, 8], "decoder_id": [6, 8], "id_width": [6, 8], "pld_width": [6, 8], "report": [6, 8], "decoderdu": [6, 8], "master": [6, 8], "cls_tgt_id_cnt": [6, 8], "inst_id": [6, 8], "vinst_class": [6, 8], "masteraxi": [6, 8], "r_ack_pld_width": [6, 8], "r_req_pld_width": [6, 8], "w_ack_pld_width": [6, 8], "w_req_pld_width": [6, 8], "node": [6, 8], "add_dst": [6, 8], "add_src": [6, 8], "addr_width": [6, 8], "get_src_index": [6, 8], "get_tgt_index": [6, 8], "src_id_width": [6, 8], "tgt_id_width": [6, 8], "txn_id_width": [6, 8], "user_width": [6, 8], "slave": [6, 8], "cls_src_id_cnt": [6, 8], "slaveaxi": [6, 8], "switch": [6, 8], "switch_id": [6, 8], "src_num": 7, "dst_num": 7, "dat_width": 7, "priority_sel": 7, "data_width": 8, "id_typ": 8, "tgt": 8, "addr": 8, "object": [8, 9], "network0": 8, "src": 8, "dst": 8, "properti": [8, 9], "str": [8, 9], "green": 8, "128": 8, "32": [8, 9], "red": 8, "gray": 8, "blue": 8, "arg": 9, "join_str": 9, "list": 9, "val": 9, "abs_path": 9, "fals": 9, "iter": 9, "has_self": 9, "true": 9, "string": 9, "obj": 9, "other": 9, "self": 9, "key": 9, "int": 9, "right_valu": 9, "str_in": 9, "int_or_str": 9, "exp": 9, "var": 9, "arithmeticerror": 9, "comment_prefix": 9, "keyword": 9, "efo": 9, "text": 9, "block_prefix": 9, "hashabl": 9, "block": 9, "start": 9, "algorithm": 9, "md5": 9, "pre_com": 9, "func": 9, "opl": 9, "opr": 9, "vector": 9, "mask": 9, "node_list": 9, "op1": 9, "op2": 9, "outer": 9, "rhs": 9, "lhs_list": 9, "clas": 9, "the": 9, "by": 9, "this": 9, "take": 9, "as": 9, "to": 9, "realiz": 9, "an": 9, "adder": 9, "that": 9, "return": 9, "of": 9, "is": 9, "max": 9, "correspond": 9, "behavior": 9, "model": 9, "it": 9, "type": 9, "same": 9, "requir": 9, "its": 9, "have": 9, "all": 9, "oplist": 9, "compar": 9, "whether": 9, "both": 9, "if": 9, "b1": 9, "els": 9, "b0": 9, "xnor": 9, "xor": 9, "select": 9, "casepair": 9, "default": 9, "use": 9, "construct": 9, "parallel": 9, "signal": 9, "lookup": 9, "tabl": 9, "organ": 9, "in": 9, "form": 9, "each": 9, "item": 9, "tupl": 9, "map": 9, "relationship": 9, "sel": 9, "first": 9, "second": 9, "doe": 9, "match": 9, "ani": 9, "will": 9, "typic": 9, "exampl": 9, "are": 9, "bres": 9, "dftres": 9, "endcas": 9, "must": 9, "mus": 9, "sam": 9, "attributss": 9, "rhs_list": 9, "splice": 9, "togeth": 9, "intercept": 9, "complex": 9, "has": 9, "no": 9, "onli": 9, "temporarili": 9, "empti": 9, "which": 9, "allow": 9, "user": 9, "method": 9, "complet": 9, "ew": 9, "for": 9, "cond": 9, "dat": 9, "conddatpair": 9, "cond0": 9, "dat0": 9, "cond1": 9, "dat1": 9, "cond2": 9, "dat2": 9, "condn": 9, "datn": 9, "than": 9, "lhs": 9, "invert": 9, "multipli": 9, "confirm": 9, "subtractor": 9, "subtract": 9, "be": 9, "calcul": 9, "after": 9, "multipl": 9, "specifi": 9, "until": 9, "none": 9, "befor": 9, "error": 9, "file": 9, "top": 9, "top_nam": 9, "ast_dict": 9, "op_list": 9, "any_v": 9, "lvalu": 9, "width_or_str": 9, "case_pair": 9, "assign_method": 9, "str_list": 9, "rtl": 9, "declar": 9, "port": 9, "need": 9, "consist": 9, "with": 9, "they": 9, "unsign": 9, "integ": 9, "clk": 9, "rst": 9, "option": 9, "async_rst": 9, "bool": 9, "rst_active_low": 9, "clk_active_neg": 9, "defin": 9, "regist": 9, "asyncrst": 9, "aysnc": 9, "reset": 9, "sync": 9, "rstactiv": 9, "low": 9, "activ": 9, "high": 9, "acitv": 9, "clkactiv": 9, "negedg": 9, "trigger": 9, "posedg": 9, "clock": 9, "also": 9, "boolean": 9, "determin": 9, "effect": 9, "level": 9, "describ": 9, "whose": 9, "on": 9, "rise": 9, "asynchron": 9, "anoth": 9, "16": 9, "sign": 9, "fall": 9, "synchron": 9, "there": 9, "two": 9, "way": 9, "initi": 9, "stand": 9, "b1101": 9, "valid": 9, "b0101": 9, "check": 9, "subclass": 9, "continu": 9, "fill": 9, "inform": 9, "into": 9, "repres": 9, "result": 9, "condit": 9, "establish": 9, "satisfi": 9, "intern": 9}, "objects": {"": [[2, 0, 0, "-", "pysrc"]], "pysrc": [[3, 0, 0, "-", "debug"], [4, 0, 0, "-", "test"], [5, 0, 0, "-", "uhdl"]], "pysrc.debug": [[3, 0, 0, "-", "debug_file_name"]], "pysrc.test": [[4, 0, 0, "-", "test_Component"], [4, 0, 0, "-", "test_Expression"], [4, 0, 0, "-", "test_Function"], [4, 0, 0, "-", "test_Port"], [4, 0, 0, "-", "test_Wire"], [4, 0, 0, "-", "test_lwnoc"], [4, 0, 0, "-", "test_name_sys"], [4, 0, 0, "-", "test_run_demo"]], "pysrc.test.test_Component": [[4, 1, 1, "", "TestComponent"]], "pysrc.test.test_Component.TestComponent": [[4, 2, 1, "", "test_define"]], "pysrc.test.test_Expression": [[4, 1, 1, "", "TestExpression"], [4, 1, 1, "", "TestValue"], [4, 1, 1, "", "TestVariable"]], "pysrc.test.test_Expression.TestExpression": [[4, 2, 1, "", "ListExpressionTest"], [4, 2, 1, "", "MultiListExpressionTest"], [4, 2, 1, "", "MultiSameListExpressionTest"], [4, 2, 1, "", "OneOpBitExpressionTest"], [4, 2, 1, "", "OneOpExpressionTest"], [4, 2, 1, "", "OneOpU1ExpressionTest"], [4, 2, 1, "", "TwoOpExpressionTest"], [4, 2, 1, "", "TwoSameOpBitExpressionTest"], [4, 2, 1, "", "TwoSameOpExpressionTest"], [4, 2, 1, "", "TwoSameOpU1ExpressionTest"], [4, 2, 1, "", "test_And"], [4, 2, 1, "", "test_AndList"], [4, 2, 1, "", "test_BitAnd"], [4, 2, 1, "", "test_BitAndList"], [4, 2, 1, "", "test_BitOr"], [4, 2, 1, "", "test_BitOrList"], [4, 2, 1, "", "test_BitXnor"], [4, 2, 1, "", "test_BitXnorList"], [4, 2, 1, "", "test_BitXor"], [4, 2, 1, "", "test_BitXorList"], [4, 2, 1, "", "test_Combine"], [4, 2, 1, "", "test_Cut"], [4, 2, 1, "", "test_Equal"], [4, 2, 1, "", "test_Greater"], [4, 2, 1, "", "test_GreaterEqual"], [4, 2, 1, "", "test_Inverse"], [4, 2, 1, "", "test_Less"], [4, 2, 1, "", "test_LessEqual"], [4, 2, 1, "", "test_Not"], [4, 2, 1, "", "test_NotEqual"], [4, 2, 1, "", "test_Or"], [4, 2, 1, "", "test_OrList"], [4, 2, 1, "", "test_SelfAnd"], [4, 2, 1, "", "test_SelfOr"], [4, 2, 1, "", "test_SelfXnor"], [4, 2, 1, "", "test_SelfXor"]], "pysrc.test.test_Expression.TestValue": [[4, 2, 1, "", "ErrAttrMismatchTest"], [4, 2, 1, "", "ErrAttrTypeWrongTest"], [4, 2, 1, "", "ErrBitsInvalidStrTest"], [4, 2, 1, "", "ErrBitsOverflowTest"], [4, 2, 1, "", "ErrCutExpSliceInvalidTest"], [4, 2, 1, "", "ErrExpInTypeWrongTest"], [4, 2, 1, "", "ErrListExpNeedMultiOpTest"], [4, 2, 1, "", "WaitException"]], "pysrc.test.test_Expression.TestVariable": [[4, 2, 1, "", "BitsTest"], [4, 2, 1, "", "SingleVarTest"], [4, 2, 1, "", "test_Inout"], [4, 2, 1, "", "test_Input"], [4, 2, 1, "", "test_Output"], [4, 2, 1, "", "test_Parameter"], [4, 2, 1, "", "test_Reg"], [4, 2, 1, "", "test_SInt"], [4, 2, 1, "", "test_UInt"], [4, 2, 1, "", "test_Wire"]], "pysrc.test.test_Function": [[4, 1, 1, "", "TestAssign"]], "pysrc.test.test_Function.TestAssign": [[4, 2, 1, "", "test_Assign_Right"], [4, 2, 1, "", "test_Assign_Wrong"]], "pysrc.test.test_Port": [[4, 1, 1, "", "TestPort"]], "pysrc.test.test_Port.TestPort": [[4, 2, 1, "", "setup_port_contain_any"], [4, 2, 1, "", "test_define"], [4, 2, 1, "", "test_equal_contain_any"], [4, 2, 1, "", "test_equal_contain_wire"], [4, 2, 1, "", "test_expand"], [4, 2, 1, "", "test_not_equal_contain_any"], [4, 2, 1, "", "test_not_equal_contain_wire"], [4, 2, 1, "", "test_reverse_contain_any"], [4, 2, 1, "", "test_reverse_contain_wire"]], "pysrc.test.test_Wire": [[4, 1, 1, "", "TestWire"]], "pysrc.test.test_Wire.TestWire": [[4, 2, 1, "", "test_define"], [4, 2, 1, "", "test_equal"], [4, 2, 1, "", "test_expand"], [4, 2, 1, "", "test_match"], [4, 2, 1, "", "test_not_equal_by_direction"], [4, 2, 1, "", "test_not_equal_by_name"], [4, 2, 1, "", "test_not_equal_by_width"], [4, 2, 1, "", "test_one_direction"], [4, 2, 1, "", "test_reverse"]], "pysrc.test.test_lwnoc": [[4, 1, 1, "", "TestBasic"]], "pysrc.test.test_lwnoc.TestBasic": [[4, 2, 1, "", "test_LwnocArb"], [4, 2, 1, "", "test_LwnocDec"], [4, 2, 1, "", "test_LwnocWrap"], [4, 2, 1, "", "test_LwnocXbar"], [4, 2, 1, "", "test_Network"], [4, 2, 1, "", "test_basic_DArb"], [4, 2, 1, "", "test_basic_DDec"], [4, 2, 1, "", "test_basic_DMst"], [4, 2, 1, "", "test_basic_DSlv"], [4, 2, 1, "", "test_basic_DWrap"]], "pysrc.test.test_name_sys": [[4, 1, 1, "", "Caculator"], [4, 1, 1, "", "TestNameSys"], [4, 1, 1, "", "UniqueNameTestWrapper"]], "pysrc.test.test_name_sys.TestNameSys": [[4, 2, 1, "", "test_unique_name"]], "pysrc.test.test_run_demo": [[4, 1, 1, "", "TestRunDemo"]], "pysrc.test.test_run_demo.TestRunDemo": [[4, 2, 1, "", "test_Crossbar"]], "pysrc.uhdl": [[6, 0, 0, "-", "Demo"], [9, 0, 0, "-", "core"]], "pysrc.uhdl.Demo": [[7, 0, 0, "-", "Crossbar"], [8, 0, 0, "-", "lwnoc"]], "pysrc.uhdl.Demo.Crossbar": [[7, 0, 0, "-", "Crossbar"], [7, 0, 0, "-", "Mux_1toM"], [7, 0, 0, "-", "Mux_Nto1"]], "pysrc.uhdl.Demo.Crossbar.Crossbar": [[7, 1, 1, "", "Crossbar"]], "pysrc.uhdl.Demo.Crossbar.Mux_1toM": [[7, 1, 1, "", "Mux_1toM"]], "pysrc.uhdl.Demo.Crossbar.Mux_Nto1": [[7, 1, 1, "", "Mux_Nto1"]], "pysrc.uhdl.Demo.lwnoc": [[8, 0, 0, "-", "AxiInterface"], [8, 0, 0, "-", "AxiParam"], [8, 0, 0, "-", "BasciHdsk"], [8, 0, 0, "-", "CmnArb"], [8, 0, 0, "-", "Credit"], [8, 0, 0, "-", "DArb"], [8, 0, 0, "-", "DArbDual"], [8, 0, 0, "-", "DDec"], [8, 0, 0, "-", "DDecDual"], [8, 0, 0, "-", "DMst"], [8, 0, 0, "-", "DSlv"], [8, 0, 0, "-", "DWrap"], [8, 0, 0, "-", "TopoEdge"], [8, 0, 0, "-", "TopoLogging"], [8, 0, 0, "-", "TopoNetwork"], [8, 0, 0, "-", "TopoNode"]], "pysrc.uhdl.Demo.lwnoc.AxiInterface": [[8, 1, 1, "", "Axi"], [8, 1, 1, "", "AxiReverse"]], "pysrc.uhdl.Demo.lwnoc.AxiInterface.Axi": [[8, 2, 1, "", "copy"], [8, 2, 1, "", "copy_reverse"]], "pysrc.uhdl.Demo.lwnoc.AxiInterface.AxiReverse": [[8, 2, 1, "", "copy"], [8, 2, 1, "", "copy_reverse"]], "pysrc.uhdl.Demo.lwnoc.BasciHdsk": [[8, 1, 1, "", "BasicHdsk"], [8, 1, 1, "", "BasicHdskReverse"]], "pysrc.uhdl.Demo.lwnoc.BasciHdsk.BasicHdsk": [[8, 2, 1, "", "copy"], [8, 2, 1, "", "copy_reverse"]], "pysrc.uhdl.Demo.lwnoc.BasciHdsk.BasicHdskReverse": [[8, 2, 1, "", "copy"], [8, 2, 1, "", "copy_reverse"]], "pysrc.uhdl.Demo.lwnoc.CmnArb": [[8, 1, 1, "", "CmnAgeMtx"]], "pysrc.uhdl.Demo.lwnoc.Credit": [[8, 1, 1, "", "DCdtRegSliceM"], [8, 1, 1, "", "DCdtRegSliceS"], [8, 1, 1, "", "SyncFIFO"]], "pysrc.uhdl.Demo.lwnoc.DArb": [[8, 1, 1, "", "DArb"]], "pysrc.uhdl.Demo.lwnoc.DArbDual": [[8, 1, 1, "", "DArbDual"]], "pysrc.uhdl.Demo.lwnoc.DDec": [[8, 1, 1, "", "DDec"]], "pysrc.uhdl.Demo.lwnoc.DDecDual": [[8, 1, 1, "", "DDecDual"]], "pysrc.uhdl.Demo.lwnoc.DMst": [[8, 1, 1, "", "DMst"], [8, 1, 1, "", "DMstAxi"]], "pysrc.uhdl.Demo.lwnoc.DSlv": [[8, 1, 1, "", "DSlv"], [8, 1, 1, "", "DSlvAxi"]], "pysrc.uhdl.Demo.lwnoc.DSlv.DSlvAxi": [[8, 2, 1, "", "addr_tgt_id_mapping"]], "pysrc.uhdl.Demo.lwnoc.DWrap": [[8, 1, 1, "", "DWrap"]], "pysrc.uhdl.Demo.lwnoc.TopoEdge": [[8, 1, 1, "", "Edge"]], "pysrc.uhdl.Demo.lwnoc.TopoLogging": [[8, 3, 1, "", "init_logger"]], "pysrc.uhdl.Demo.lwnoc.TopoNetwork": [[8, 1, 1, "", "Network"]], "pysrc.uhdl.Demo.lwnoc.TopoNetwork.Network": [[8, 2, 1, "", "add"], [8, 2, 1, "", "link"]], "pysrc.uhdl.Demo.lwnoc.TopoNode": [[8, 1, 1, "", "Adapter"], [8, 1, 1, "", "Arbiter"], [8, 1, 1, "", "ArbiterDual"], [8, 1, 1, "", "Decoder"], [8, 1, 1, "", "DecoderDual"], [8, 1, 1, "", "Master"], [8, 1, 1, "", "MasterAxi"], [8, 1, 1, "", "Node"], [8, 1, 1, "", "Slave"], [8, 1, 1, "", "SlaveAxi"], [8, 1, 1, "", "Switch"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.Adapter": [[8, 4, 1, "", "adapter_id"], [8, 5, 1, "", "name"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.Arbiter": [[8, 4, 1, "", "arbiter_id"], [8, 4, 1, "", "color"], [8, 2, 1, "", "create_vinst"], [8, 4, 1, "", "dst_num_limit"], [8, 2, 1, "", "get_vinst"], [8, 5, 1, "", "name"], [8, 4, 1, "", "src_num_limit"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.ArbiterDual": [[8, 2, 1, "", "create_vinst"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.Decoder": [[8, 4, 1, "", "color"], [8, 2, 1, "", "create_vinst"], [8, 4, 1, "", "decoder_id"], [8, 4, 1, "", "dst_num_limit"], [8, 4, 1, "", "id_width"], [8, 5, 1, "", "name"], [8, 4, 1, "", "pld_width"], [8, 2, 1, "", "report"], [8, 4, 1, "", "src_num_limit"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.DecoderDual": [[8, 2, 1, "", "create_vinst"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.Master": [[8, 4, 1, "", "cls_tgt_id_cnt"], [8, 4, 1, "", "color"], [8, 4, 1, "", "dst_num_limit"], [8, 5, 1, "", "inst_id"], [8, 5, 1, "", "name"], [8, 4, 1, "", "src_num_limit"], [8, 4, 1, "", "vinst_class"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.MasterAxi": [[8, 5, 1, "", "r_ack_pld_width"], [8, 5, 1, "", "r_req_pld_width"], [8, 4, 1, "", "vinst_class"], [8, 5, 1, "", "w_ack_pld_width"], [8, 5, 1, "", "w_req_pld_width"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.Node": [[8, 2, 1, "", "add_dst"], [8, 2, 1, "", "add_src"], [8, 5, 1, "", "addr_width"], [8, 4, 1, "", "color"], [8, 2, 1, "", "create_vinst"], [8, 4, 1, "", "dst_num_limit"], [8, 2, 1, "", "get_src_index"], [8, 2, 1, "", "get_tgt_index"], [8, 2, 1, "", "get_vinst"], [8, 5, 1, "", "name"], [8, 2, 1, "", "report"], [8, 5, 1, "", "src_id_width"], [8, 4, 1, "", "src_num_limit"], [8, 5, 1, "", "tgt_id_width"], [8, 5, 1, "", "txn_id_width"], [8, 5, 1, "", "user_width"], [8, 4, 1, "", "vinst_class"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.Slave": [[8, 4, 1, "", "cls_src_id_cnt"], [8, 4, 1, "", "color"], [8, 4, 1, "", "dst_num_limit"], [8, 5, 1, "", "inst_id"], [8, 5, 1, "", "name"], [8, 4, 1, "", "src_num_limit"], [8, 4, 1, "", "vinst_class"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.SlaveAxi": [[8, 5, 1, "", "r_ack_pld_width"], [8, 5, 1, "", "r_req_pld_width"], [8, 4, 1, "", "vinst_class"], [8, 5, 1, "", "w_ack_pld_width"], [8, 5, 1, "", "w_req_pld_width"]], "pysrc.uhdl.Demo.lwnoc.TopoNode.Switch": [[8, 4, 1, "", "color"], [8, 5, 1, "", "name"], [8, 4, 1, "", "switch_id"]], "pysrc.uhdl.core": [[9, 3, 1, "", "Add"], [9, 3, 1, "", "And"], [9, 3, 1, "", "AndList"], [9, 1, 1, "", "AnyConstant"], [9, 3, 1, "", "Assign"], [9, 0, 0, "-", "BasicFunction"], [9, 3, 1, "", "BitAnd"], [9, 3, 1, "", "BitAndList"], [9, 3, 1, "", "BitMask"], [9, 3, 1, "", "BitOr"], [9, 3, 1, "", "BitOrList"], [9, 3, 1, "", "BitXnor"], [9, 3, 1, "", "BitXnorList"], [9, 3, 1, "", "BitXor"], [9, 3, 1, "", "BitXorList"], [9, 1, 1, "", "Bundle"], [9, 3, 1, "", "Case"], [9, 4, 1, "", "Circuit"], [9, 3, 1, "", "Combine"], [9, 1, 1, "", "Component"], [9, 0, 0, "-", "Component"], [9, 0, 0, "-", "Config"], [9, 0, 0, "-", "ConnectionProperty"], [9, 0, 0, "-", "CustConfig"], [9, 3, 1, "", "Cut"], [9, 3, 1, "", "EmptyWhen"], [9, 3, 1, "", "Equal"], [9, 0, 0, "-", "Exception"], [9, 0, 0, "-", "ExtensibleFileObject"], [9, 3, 1, "", "Fanout"], [9, 0, 0, "-", "FileProcess"], [9, 0, 0, "-", "Function"], [9, 3, 1, "", "Greater"], [9, 3, 1, "", "GreaterEqual"], [9, 1, 1, "", "IOGroup"], [9, 1, 1, "", "Inout"], [9, 1, 1, "", "Input"], [9, 0, 0, "-", "InternalTool"], [9, 3, 1, "", "Inverse"], [9, 3, 1, "", "LCA"], [9, 3, 1, "", "Less"], [9, 3, 1, "", "LessEqual"], [9, 3, 1, "", "Linkable"], [9, 0, 0, "-", "Lint"], [9, 3, 1, "", "Mul"], [9, 3, 1, "", "Not"], [9, 3, 1, "", "NotEqual"], [9, 0, 0, "-", "Operator"], [9, 3, 1, "", "Or"], [9, 3, 1, "", "OrList"], [9, 1, 1, "", "Output"], [9, 1, 1, "", "Parameter"], [9, 1, 1, "", "Reg"], [9, 0, 0, "-", "Root"], [9, 1, 1, "", "SInt"], [9, 3, 1, "", "SelfAnd"], [9, 3, 1, "", "SelfOr"], [9, 3, 1, "", "SelfXnor"], [9, 3, 1, "", "SelfXor"], [9, 3, 1, "", "SmartAssign"], [9, 3, 1, "", "Sub"], [9, 1, 1, "", "UInt"], [9, 3, 1, "", "Unpack"], [9, 1, 1, "", "VComponent"], [9, 0, 0, "-", "VComponent"], [9, 0, 0, "-", "VFile"], [9, 0, 0, "-", "Variable"], [9, 3, 1, "", "When"], [9, 1, 1, "", "Wire"], [9, 3, 1, "", "assign"], [9, 3, 1, "", "get_circuit"], [9, 3, 1, "", "join_name"], [9, 3, 1, "", "linkable"], [9, 3, 1, "", "set_circuit"], [9, 3, 1, "", "smart_assign"], [9, 3, 1, "", "when"]], "pysrc.uhdl.core.AnyConstant": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "lstring"], [9, 2, 1, "", "rstring"], [9, 5, 1, "", "template"]], "pysrc.uhdl.core.BasicFunction": [[9, 3, 1, "", "join_name"]], "pysrc.uhdl.core.Bundle": [[9, 2, 1, "", "as_list"], [9, 5, 1, "", "attribute"], [9, 2, 1, "", "connect"], [9, 2, 1, "", "exclude"], [9, 5, 1, "", "io_list"], [9, 5, 1, "", "name_before_component"], [9, 5, 1, "", "name_until_component"], [9, 2, 1, "", "reverse"], [9, 5, 1, "", "rvalue"]], "pysrc.uhdl.core.Component": [[9, 1, 1, "", "Component"], [9, 5, 1, "", "PARAM"], [9, 1, 1, "", "PARAM_CONTAINER"], [9, 2, 1, "", "compile"], [9, 5, 1, "", "component_list"], [9, 2, 1, "", "create"], [9, 2, 1, "", "create_all_vfile"], [9, 2, 1, "", "create_this_vfile"], [9, 2, 1, "", "expose_io"], [9, 2, 1, "", "generate_filelist"], [9, 2, 1, "", "generate_verilog"], [9, 2, 1, "", "get_circuit_list"], [9, 2, 1, "", "get_component_list"], [9, 2, 1, "", "get_io"], [9, 2, 1, "", "get_io_list"], [9, 5, 1, "", "input_list"], [9, 5, 1, "", "inter_sig_list"], [9, 5, 1, "", "io_list"], [9, 3, 1, "", "isComponent"], [9, 5, 1, "", "lint"], [9, 5, 1, "", "lvalue_list"], [9, 5, 1, "", "module_name"], [9, 5, 1, "", "outer_lvalue_list"], [9, 5, 1, "", "output_list"], [9, 5, 1, "", "output_path"], [9, 5, 1, "", "param_list"], [9, 5, 1, "", "reg_list"], [9, 2, 1, "", "run_lint"], [9, 2, 1, "", "run_struct_check"], [9, 2, 1, "", "run_undriven_check"], [9, 5, 1, "", "var_list"], [9, 5, 1, "", "verilog_def"], [9, 5, 1, "", "verilog_inst"], [9, 5, 1, "", "verilog_outer_def_as_list"], [9, 5, 1, "", "vfile"], [9, 5, 1, "", "wire_list"]], "pysrc.uhdl.core.Component.Component": [[9, 5, 1, "", "PARAM"], [9, 2, 1, "", "compile"], [9, 5, 1, "", "component_list"], [9, 2, 1, "", "create"], [9, 2, 1, "", "create_all_vfile"], [9, 2, 1, "", "create_this_vfile"], [9, 2, 1, "", "expose_io"], [9, 2, 1, "", "generate_filelist"], [9, 2, 1, "", "generate_verilog"], [9, 2, 1, "", "get_circuit_list"], [9, 2, 1, "", "get_component_list"], [9, 2, 1, "", "get_io"], [9, 2, 1, "", "get_io_list"], [9, 5, 1, "", "input_list"], [9, 5, 1, "", "inter_sig_list"], [9, 5, 1, "", "io_list"], [9, 5, 1, "", "lint"], [9, 5, 1, "", "lvalue_list"], [9, 5, 1, "", "module_name"], [9, 5, 1, "", "outer_lvalue_list"], [9, 5, 1, "", "output_list"], [9, 5, 1, "", "output_path"], [9, 5, 1, "", "param_list"], [9, 5, 1, "", "reg_list"], [9, 2, 1, "", "run_lint"], [9, 2, 1, "", "run_struct_check"], [9, 2, 1, "", "run_undriven_check"], [9, 5, 1, "", "var_list"], [9, 5, 1, "", "verilog_def"], [9, 5, 1, "", "verilog_inst"], [9, 5, 1, "", "verilog_outer_def_as_list"], [9, 5, 1, "", "vfile"], [9, 5, 1, "", "wire_list"]], "pysrc.uhdl.core.Config": [[9, 1, 1, "", "UHDLConfig"], [9, 3, 1, "", "rich_ext_set_all_priority"], [9, 3, 1, "", "rich_ext_setattr"], [9, 1, 1, "", "uhdl_cfg_descriptor"], [9, 1, 1, "", "uhdl_cfg_rich_bool"]], "pysrc.uhdl.core.Config.UHDLConfig": [[9, 2, 1, "", "set_all_priority"], [9, 2, 1, "", "update_by"]], "pysrc.uhdl.core.Config.uhdl_cfg_descriptor": [[9, 5, 1, "", "priority"], [9, 5, 1, "", "value"]], "pysrc.uhdl.core.Config.uhdl_cfg_rich_bool": [[9, 2, 1, "", "set_all_priority"]], "pysrc.uhdl.core.ConnectionProperty": [[9, 1, 1, "", "ConnectionProperty"], [9, 1, 1, "", "UnitConnectionProperty"]], "pysrc.uhdl.core.ConnectionProperty.ConnectionProperty": [[9, 2, 1, "", "AssignPair"], [9, 2, 1, "", "Assignable"]], "pysrc.uhdl.core.ConnectionProperty.UnitConnectionProperty": [[9, 2, 1, "", "Assignable"]], "pysrc.uhdl.core.CustConfig": [[9, 1, 1, "", "ComponentConfig"]], "pysrc.uhdl.core.Exception": [[9, 6, 1, "", "ErrAssignTypeWrong"], [9, 6, 1, "", "ErrAttrMismatch"], [9, 6, 1, "", "ErrAttrTypeWrong"], [9, 6, 1, "", "ErrBitsInvalidStr"], [9, 6, 1, "", "ErrBitsValOverflow"], [9, 6, 1, "", "ErrConstInWrong"], [9, 6, 1, "", "ErrCutExpSliceInvalid"], [9, 6, 1, "", "ErrExpInTypeWrong"], [9, 6, 1, "", "ErrListExpNeedMultiOp"], [9, 6, 1, "", "ErrLogicSigAttrWrong"], [9, 6, 1, "", "ErrNeedBool"], [9, 6, 1, "", "ErrUHDL"], [9, 6, 1, "", "ErrUHDLStr"], [9, 6, 1, "", "ErrVarCmpWrong"], [9, 6, 1, "", "ErrWhenExpOperateWrong"]], "pysrc.uhdl.core.ExtensibleFileObject": [[9, 1, 1, "", "ExtensibleFileObject"], [9, 1, 1, "", "HashableTextBlock"], [9, 1, 1, "", "ParamBox"], [9, 1, 1, "", "VersionControlBlock"]], "pysrc.uhdl.core.ExtensibleFileObject.ExtensibleFileObject": [[9, 5, 1, "", "CONTENT"], [9, 5, 1, "", "PARAMETER"], [9, 2, 1, "", "get_MD5"], [9, 5, 1, "", "line_prefix"], [9, 2, 1, "", "load"], [9, 2, 1, "", "save"], [9, 2, 1, "", "write"], [9, 2, 1, "", "write_tool_message"], [9, 2, 1, "", "write_version"]], "pysrc.uhdl.core.ExtensibleFileObject.HashableTextBlock": [[9, 2, 1, "", "clean"], [9, 2, 1, "", "get_hash"], [9, 5, 1, "", "wrap_text"], [9, 2, 1, "", "write"]], "pysrc.uhdl.core.ExtensibleFileObject.VersionControlBlock": [[9, 5, 1, "", "wrap_text"]], "pysrc.uhdl.core.FileProcess": [[9, 3, 1, "", "check_vfile"], [9, 3, 1, "", "create_file"], [9, 3, 1, "", "file_list_dedup"], [9, 3, 1, "", "refresh_directory"], [9, 3, 1, "", "relpath"]], "pysrc.uhdl.core.Function": [[9, 3, 1, "", "Assign"], [9, 3, 1, "", "BitMask"], [9, 3, 1, "", "LCA"], [9, 3, 1, "", "Linkable"], [9, 3, 1, "", "SmartAssign"], [9, 3, 1, "", "Unpack"]], "pysrc.uhdl.core.IOGroup": [[9, 2, 1, "", "exclude"], [9, 5, 1, "", "io_list"], [9, 2, 1, "", "reverse"], [9, 5, 1, "", "verilog_assignment"], [9, 5, 1, "", "verilog_def"], [9, 5, 1, "", "verilog_inst"], [9, 5, 1, "", "verilog_outer_def"]], "pysrc.uhdl.core.Inout": [[9, 2, 1, "", "reverse"], [9, 2, 1, "", "template"]], "pysrc.uhdl.core.Input": [[9, 5, 1, "", "lstring"], [9, 2, 1, "", "reverse"], [9, 2, 1, "", "rstring"], [9, 2, 1, "", "template"]], "pysrc.uhdl.core.InternalTool": [[9, 3, 1, "", "GetClsNameFromCls"], [9, 3, 1, "", "GetClsNameFromObj"]], "pysrc.uhdl.core.Lint": [[9, 1, 1, "", "Lint"]], "pysrc.uhdl.core.Lint.Lint": [[9, 2, 1, "", "info"], [9, 2, 1, "", "unconnect"]], "pysrc.uhdl.core.Operator": [[9, 3, 1, "", "Add"], [9, 3, 1, "", "And"], [9, 3, 1, "", "AndList"], [9, 3, 1, "", "BitAnd"], [9, 3, 1, "", "BitAndList"], [9, 3, 1, "", "BitOr"], [9, 3, 1, "", "BitOrList"], [9, 3, 1, "", "BitXnor"], [9, 3, 1, "", "BitXnorList"], [9, 3, 1, "", "BitXor"], [9, 3, 1, "", "BitXorList"], [9, 3, 1, "", "Case"], [9, 3, 1, "", "Combine"], [9, 3, 1, "", "Cut"], [9, 3, 1, "", "EmptyWhen"], [9, 3, 1, "", "Equal"], [9, 3, 1, "", "Fanout"], [9, 3, 1, "", "Greater"], [9, 3, 1, "", "GreaterEqual"], [9, 3, 1, "", "Inverse"], [9, 3, 1, "", "Less"], [9, 3, 1, "", "LessEqual"], [9, 3, 1, "", "Mul"], [9, 3, 1, "", "Not"], [9, 3, 1, "", "NotEqual"], [9, 3, 1, "", "Or"], [9, 3, 1, "", "OrList"], [9, 3, 1, "", "SelfAnd"], [9, 3, 1, "", "SelfOr"], [9, 3, 1, "", "SelfXnor"], [9, 3, 1, "", "SelfXor"], [9, 3, 1, "", "Sub"], [9, 3, 1, "", "When"]], "pysrc.uhdl.core.Output": [[9, 5, 1, "", "lstring"], [9, 2, 1, "", "reverse"], [9, 2, 1, "", "rstring"], [9, 2, 1, "", "template"]], "pysrc.uhdl.core.Parameter": [[9, 5, 1, "", "lstring"], [9, 2, 1, "", "rstring"], [9, 5, 1, "", "verilog_assignment"], [9, 5, 1, "", "verilog_def"]], "pysrc.uhdl.core.Reg": [[9, 5, 1, "", "verilog_assignment"], [9, 5, 1, "", "verilog_def"], [9, 5, 1, "", "verilog_def_as_list"]], "pysrc.uhdl.core.Root": [[9, 1, 1, "", "Root"], [9, 3, 1, "", "get_circuit"], [9, 3, 1, "", "set_circuit"]], "pysrc.uhdl.core.Root.Root": [[9, 2, 1, "", "Get"], [9, 2, 1, "", "Set"], [9, 2, 1, "", "ancestors"], [9, 2, 1, "", "ancestors_core"], [9, 5, 1, "", "father"], [9, 2, 1, "", "father_until"], [9, 2, 1, "", "father_until_component"], [9, 2, 1, "", "father_until_not"], [9, 5, 1, "", "full_hier"], [9, 2, 1, "", "full_name"], [9, 2, 1, "", "get"], [9, 2, 1, "", "get_circuit"], [9, 5, 1, "", "hier"], [9, 5, 1, "", "name"], [9, 2, 1, "", "name_before"], [9, 2, 1, "", "name_before_not"], [9, 2, 1, "", "name_until"], [9, 2, 1, "", "name_until_not"], [9, 2, 1, "", "set"], [9, 2, 1, "", "set_circuit"], [9, 2, 1, "", "set_father"], [9, 2, 1, "", "set_father_type"], [9, 2, 1, "", "set_name"]], "pysrc.uhdl.core.VComponent": [[9, 1, 1, "", "VComponent"], [9, 1, 1, "", "VParameter"], [9, 1, 1, "", "VPort"], [9, 2, 1, "", "create_this_vfile"], [9, 5, 1, "", "module_name"], [9, 2, 1, "", "parse_ast"]], "pysrc.uhdl.core.VComponent.VComponent": [[9, 2, 1, "", "create_this_vfile"], [9, 5, 1, "", "module_name"], [9, 2, 1, "", "parse_ast"]], "pysrc.uhdl.core.VComponent.VParameter": [[9, 2, 1, "", "create_uhdl_param"]], "pysrc.uhdl.core.VComponent.VPort": [[9, 2, 1, "", "create_uhdl_port"]], "pysrc.uhdl.core.VFile": [[9, 1, 1, "", "VFile"]], "pysrc.uhdl.core.VFile.VFile": [[9, 5, 1, "", "file_list"], [9, 5, 1, "", "path"], [9, 5, 1, "", "top_path"]], "pysrc.uhdl.core.Variable": [[9, 1, 1, "", "AddExpression"], [9, 1, 1, "", "AlwaysCombExpression"], [9, 1, 1, "", "AndExpression"], [9, 1, 1, "", "AndListExpression"], [9, 1, 1, "", "AnyConstant"], [9, 1, 1, "", "BitAndExpression"], [9, 1, 1, "", "BitAndListExpression"], [9, 1, 1, "", "BitOrExpression"], [9, 1, 1, "", "BitOrListExpression"], [9, 1, 1, "", "BitXnorExpression"], [9, 1, 1, "", "BitXnorListExpression"], [9, 1, 1, "", "BitXorExpression"], [9, 1, 1, "", "BitXorListExpression"], [9, 1, 1, "", "Bits"], [9, 1, 1, "", "Bundle"], [9, 1, 1, "", "CaseExpression"], [9, 1, 1, "", "CombineExpression"], [9, 1, 1, "", "Constant"], [9, 1, 1, "", "CutExpression"], [9, 1, 1, "", "EqualExpression"], [9, 1, 1, "", "Expression"], [9, 1, 1, "", "FanoutExpression"], [9, 1, 1, "", "GreaterEqualExpression"], [9, 1, 1, "", "GreaterExpression"], [9, 1, 1, "", "GroupVar"], [9, 1, 1, "", "IOGroup"], [9, 1, 1, "", "IOSig"], [9, 1, 1, "", "Inout"], [9, 1, 1, "", "Input"], [9, 1, 1, "", "InverseExpression"], [9, 1, 1, "", "LeftShift"], [9, 1, 1, "", "LessEqualExpression"], [9, 1, 1, "", "LessExpression"], [9, 1, 1, "", "ListExpression"], [9, 1, 1, "", "MulExpression"], [9, 1, 1, "", "MultiListExpression"], [9, 1, 1, "", "MultiSameListExpression"], [9, 1, 1, "", "NotEqualExpression"], [9, 1, 1, "", "NotExpression"], [9, 1, 1, "", "OneOpBitExpressionTest"], [9, 1, 1, "", "OneOpExpression"], [9, 1, 1, "", "OneOpU1Expression"], [9, 1, 1, "", "OrExpression"], [9, 1, 1, "", "OrListExpression"], [9, 1, 1, "", "Output"], [9, 1, 1, "", "Parameter"], [9, 1, 1, "", "Reg"], [9, 1, 1, "", "RightShift"], [9, 1, 1, "", "SInt"], [9, 1, 1, "", "SelfAndExpression"], [9, 1, 1, "", "SelfOrExpression"], [9, 1, 1, "", "SelfXnorExpression"], [9, 1, 1, "", "SelfXorExpression"], [9, 1, 1, "", "SingleVar"], [9, 1, 1, "", "SubExpression"], [9, 1, 1, "", "TwoOpExpression"], [9, 1, 1, "", "TwoSameOpBitExpression"], [9, 1, 1, "", "TwoSameOpExpression"], [9, 1, 1, "", "TwoSameOpU1Expression"], [9, 1, 1, "", "UInt"], [9, 1, 1, "", "Value"], [9, 1, 1, "", "ValueRoot"], [9, 1, 1, "", "Variable"], [9, 1, 1, "", "WhenExpression"], [9, 1, 1, "", "Wire"], [9, 1, 1, "", "WireSig"]], "pysrc.uhdl.core.Variable.AddExpression": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.AndExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.AndListExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.AnyConstant": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "lstring"], [9, 2, 1, "", "rstring"], [9, 5, 1, "", "template"]], "pysrc.uhdl.core.Variable.BitAndExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.BitAndListExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.BitOrExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.BitOrListExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.BitXnorExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.BitXnorListExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.BitXorExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.BitXorListExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.Bits": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "lstring"], [9, 2, 1, "", "rstring"], [9, 5, 1, "", "template"], [9, 5, 1, "", "value"], [9, 5, 1, "", "width"]], "pysrc.uhdl.core.Variable.Bundle": [[9, 2, 1, "", "as_list"], [9, 5, 1, "", "attribute"], [9, 2, 1, "", "connect"], [9, 2, 1, "", "exclude"], [9, 5, 1, "", "io_list"], [9, 5, 1, "", "name_before_component"], [9, 5, 1, "", "name_until_component"], [9, 2, 1, "", "reverse"], [9, 5, 1, "", "rvalue"]], "pysrc.uhdl.core.Variable.CaseExpression": [[9, 5, 1, "", "attribute"], [9, 2, 1, "", "bstring"]], "pysrc.uhdl.core.Variable.CombineExpression": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "op_name"], [9, 2, 1, "", "rstring"]], "pysrc.uhdl.core.Variable.CutExpression": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "op_name"], [9, 2, 1, "", "rstring"]], "pysrc.uhdl.core.Variable.EqualExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.Expression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.FanoutExpression": [[9, 5, 1, "", "attribute"], [9, 2, 1, "", "rstring"]], "pysrc.uhdl.core.Variable.GreaterEqualExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.GreaterExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.GroupVar": [[9, 2, 1, "", "exclude"]], "pysrc.uhdl.core.Variable.IOGroup": [[9, 2, 1, "", "exclude"], [9, 5, 1, "", "io_list"], [9, 2, 1, "", "reverse"], [9, 5, 1, "", "verilog_assignment"], [9, 5, 1, "", "verilog_def"], [9, 5, 1, "", "verilog_inst"], [9, 5, 1, "", "verilog_outer_def"]], "pysrc.uhdl.core.Variable.IOSig": [[9, 5, 1, "", "verilog_def"], [9, 5, 1, "", "verilog_def_as_list"], [9, 5, 1, "", "verilog_inst"], [9, 5, 1, "", "verilog_outer_def"], [9, 5, 1, "", "verilog_outer_def_as_list_io"]], "pysrc.uhdl.core.Variable.Inout": [[9, 2, 1, "", "reverse"], [9, 2, 1, "", "template"]], "pysrc.uhdl.core.Variable.Input": [[9, 5, 1, "", "lstring"], [9, 2, 1, "", "reverse"], [9, 2, 1, "", "rstring"], [9, 2, 1, "", "template"]], "pysrc.uhdl.core.Variable.InverseExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.LeftShift": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.LessEqualExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.LessExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.ListExpression": [[9, 2, 1, "", "rstring"]], "pysrc.uhdl.core.Variable.MulExpression": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.MultiListExpression": [[9, 5, 1, "", "attribute"]], "pysrc.uhdl.core.Variable.MultiSameListExpression": [[9, 5, 1, "", "attribute"]], "pysrc.uhdl.core.Variable.NotEqualExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.NotExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.OneOpBitExpressionTest": [[9, 5, 1, "", "attribute"]], "pysrc.uhdl.core.Variable.OneOpExpression": [[9, 2, 1, "", "rstring"]], "pysrc.uhdl.core.Variable.OneOpU1Expression": [[9, 5, 1, "", "attribute"]], "pysrc.uhdl.core.Variable.OrExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.OrListExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.Output": [[9, 5, 1, "", "lstring"], [9, 2, 1, "", "reverse"], [9, 2, 1, "", "rstring"], [9, 2, 1, "", "template"]], "pysrc.uhdl.core.Variable.Parameter": [[9, 5, 1, "", "lstring"], [9, 2, 1, "", "rstring"], [9, 5, 1, "", "verilog_assignment"], [9, 5, 1, "", "verilog_def"]], "pysrc.uhdl.core.Variable.Reg": [[9, 5, 1, "", "verilog_assignment"], [9, 5, 1, "", "verilog_def"], [9, 5, 1, "", "verilog_def_as_list"]], "pysrc.uhdl.core.Variable.RightShift": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.SelfAndExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.SelfOrExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.SelfXnorExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.SelfXorExpression": [[9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.SingleVar": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "lstring"], [9, 2, 1, "", "rstring"], [9, 5, 1, "", "width"]], "pysrc.uhdl.core.Variable.SubExpression": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "op_name"], [9, 5, 1, "", "op_str"]], "pysrc.uhdl.core.Variable.TwoOpExpression": [[9, 2, 1, "", "rstring"]], "pysrc.uhdl.core.Variable.TwoSameOpBitExpression": [[9, 5, 1, "", "attribute"]], "pysrc.uhdl.core.Variable.TwoSameOpU1Expression": [[9, 5, 1, "", "attribute"]], "pysrc.uhdl.core.Variable.Value": [[9, 5, 1, "", "attribute"], [9, 2, 1, "", "bstring"], [9, 2, 1, "", "check_rvalue"], [9, 5, 1, "", "des_connect"], [9, 5, 1, "", "lstring"], [9, 2, 1, "", "rstring"], [9, 5, 1, "", "src_connect"]], "pysrc.uhdl.core.Variable.Variable": [[9, 5, 1, "", "attribute"], [9, 5, 1, "", "name_before_component"], [9, 5, 1, "", "name_until_component"], [9, 5, 1, "", "rvalue"], [9, 5, 1, "", "var_name"], [9, 5, 1, "", "verilog_assignment"]], "pysrc.uhdl.core.Variable.WhenExpression": [[9, 2, 1, "", "Ohterwise"], [9, 2, 1, "", "Then"], [9, 2, 1, "", "When"], [9, 5, 1, "", "attribute"], [9, 2, 1, "", "bstring"], [9, 2, 1, "", "otherwise"], [9, 2, 1, "", "then"], [9, 2, 1, "", "when"]], "pysrc.uhdl.core.Variable.Wire": [[9, 5, 1, "", "verilog_def"], [9, 5, 1, "", "verilog_def_as_list"]], "pysrc.uhdl.core.Wire": [[9, 5, 1, "", "verilog_def"], [9, 5, 1, "", "verilog_def_as_list"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:function", "4": "py:attribute", "5": "py:property", "6": "py:exception"}, "objnames": {"0": ["py", "module", "Python \u6a21\u5757"], "1": ["py", "class", "Python \u7c7b"], "2": ["py", "method", "Python \u65b9\u6cd5"], "3": ["py", "function", "Python \u51fd\u6570"], "4": ["py", "attribute", "Python \u5c5e\u6027"], "5": ["py", "property", "Python \u6258\u7ba1\u5c5e\u6027"], "6": ["py", "exception", "Python \u5f02\u5e38"]}, "titleterms": {"welcom": 0, "to": 0, "uhdl": [0, 5, 6, 7, 8, 9], "document": 0, "introduct": 0, "indic": 0, "and": 0, "tabl": 0, "pysrc": [1, 2, 3, 4, 5, 6, 7, 8, 9], "packag": [2, 3, 4, 5, 6, 7, 8, 9], "subpackag": [2, 5, 6], "modul": [2, 3, 4, 5, 6, 7, 8, 9], "content": [2, 3, 4, 5, 6, 7, 8, 9], "debug": 3, "submodul": [3, 4, 7, 8, 9], "debug_file_nam": 3, "test": 4, "test_compon": 4, "test_express": 4, "test_funct": 4, "test_port": 4, "test_wir": 4, "test_lwnoc": 4, "test_name_si": 4, "test_quick_start": 4, "test_run_demo": 4, "demo": [6, 7, 8], "crossbar": 7, "mux_1tom": 7, "mux_nto1": 7, "lwnoc": 8, "axiinterfac": 8, "axiparam": 8, "bascihdsk": 8, "cmnarb": 8, "credit": 8, "darb": 8, "darbdual": 8, "ddec": 8, "ddecdual": 8, "dmst": 8, "dslv": 8, "dwrap": 8, "topoedg": 8, "topolog": 8, "toponetwork": 8, "toponod": 8, "core": 9, "basicfunct": 9, "compon": 9, "config": 9, "connectionproperti": 9, "custconfig": 9, "except": 9, "extensiblefileobject": 9, "fileprocess": 9, "function": 9, "internaltool": 9, "lint": 9, "oper": 9, "root": 9, "vcompon": 9, "vfile": 9, "variabl": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to UHDL\u2019s documentation!": [[0, "welcome-to-uhdl-s-documentation"]], "Introduction": [[0, "introduction"]], "Indices and tables": [[0, "indices-and-tables"]], "pysrc": [[1, "pysrc"]], "pysrc package": [[2, "pysrc-package"]], "Subpackages": [[2, "subpackages"], [5, "subpackages"], [6, "subpackages"]], "Module contents": [[2, "module-pysrc"], [3, "module-pysrc.debug"], [5, "module-pysrc.uhdl"], [6, "module-pysrc.uhdl.Demo"], [7, "module-pysrc.uhdl.Demo.Crossbar"], [8, "module-pysrc.uhdl.Demo.lwnoc"], [9, "module-pysrc.uhdl.core"], [4, "module-pysrc.test"]], "pysrc.debug package": [[3, "pysrc-debug-package"]], "Submodules": [[3, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [4, "submodules"]], "pysrc.debug.debug_file_name module": [[3, "module-pysrc.debug.debug_file_name"]], "pysrc.uhdl package": [[5, "pysrc-uhdl-package"]], "pysrc.uhdl.Demo package": [[6, "pysrc-uhdl-demo-package"]], "pysrc.uhdl.Demo.Crossbar package": [[7, "pysrc-uhdl-demo-crossbar-package"]], "pysrc.uhdl.Demo.Crossbar.Crossbar module": [[7, "module-pysrc.uhdl.Demo.Crossbar.Crossbar"]], "pysrc.uhdl.Demo.Crossbar.Mux_1toM module": [[7, "module-pysrc.uhdl.Demo.Crossbar.Mux_1toM"]], "pysrc.uhdl.Demo.Crossbar.Mux_Nto1 module": [[7, "module-pysrc.uhdl.Demo.Crossbar.Mux_Nto1"]], "pysrc.uhdl.Demo.lwnoc package": [[8, "pysrc-uhdl-demo-lwnoc-package"]], "pysrc.uhdl.Demo.lwnoc.AxiInterface module": [[8, "module-pysrc.uhdl.Demo.lwnoc.AxiInterface"]], "pysrc.uhdl.Demo.lwnoc.AxiParam module": [[8, "module-pysrc.uhdl.Demo.lwnoc.AxiParam"]], "pysrc.uhdl.Demo.lwnoc.BasciHdsk module": [[8, "module-pysrc.uhdl.Demo.lwnoc.BasciHdsk"]], "pysrc.uhdl.Demo.lwnoc.CmnArb module": [[8, "module-pysrc.uhdl.Demo.lwnoc.CmnArb"]], "pysrc.uhdl.Demo.lwnoc.Credit module": [[8, "module-pysrc.uhdl.Demo.lwnoc.Credit"]], "pysrc.uhdl.Demo.lwnoc.DArb module": [[8, "module-pysrc.uhdl.Demo.lwnoc.DArb"]], "pysrc.uhdl.Demo.lwnoc.DArbDual module": [[8, "module-pysrc.uhdl.Demo.lwnoc.DArbDual"]], "pysrc.uhdl.Demo.lwnoc.DDec module": [[8, "module-pysrc.uhdl.Demo.lwnoc.DDec"]], "pysrc.uhdl.Demo.lwnoc.DDecDual module": [[8, "module-pysrc.uhdl.Demo.lwnoc.DDecDual"]], "pysrc.uhdl.Demo.lwnoc.DMst module": [[8, "module-pysrc.uhdl.Demo.lwnoc.DMst"]], "pysrc.uhdl.Demo.lwnoc.DSlv module": [[8, "module-pysrc.uhdl.Demo.lwnoc.DSlv"]], "pysrc.uhdl.Demo.lwnoc.DWrap module": [[8, "module-pysrc.uhdl.Demo.lwnoc.DWrap"]], "pysrc.uhdl.Demo.lwnoc.TopoEdge module": [[8, "module-pysrc.uhdl.Demo.lwnoc.TopoEdge"]], "pysrc.uhdl.Demo.lwnoc.TopoLogging module": [[8, "module-pysrc.uhdl.Demo.lwnoc.TopoLogging"]], "pysrc.uhdl.Demo.lwnoc.TopoNetwork module": [[8, "module-pysrc.uhdl.Demo.lwnoc.TopoNetwork"]], "pysrc.uhdl.Demo.lwnoc.TopoNode module": [[8, "module-pysrc.uhdl.Demo.lwnoc.TopoNode"]], "pysrc.uhdl.core package": [[9, "pysrc-uhdl-core-package"]], "pysrc.uhdl.core.BasicFunction module": [[9, "module-pysrc.uhdl.core.BasicFunction"]], "pysrc.uhdl.core.Component module": [[9, "module-pysrc.uhdl.core.Component"]], "pysrc.uhdl.core.Config module": [[9, "module-pysrc.uhdl.core.Config"]], "pysrc.uhdl.core.ConnectionProperty module": [[9, "module-pysrc.uhdl.core.ConnectionProperty"]], "pysrc.uhdl.core.CustConfig module": [[9, "module-pysrc.uhdl.core.CustConfig"]], "pysrc.uhdl.core.Exception module": [[9, "module-pysrc.uhdl.core.Exception"]], "pysrc.uhdl.core.ExtensibleFileObject module": [[9, "module-pysrc.uhdl.core.ExtensibleFileObject"]], "pysrc.uhdl.core.FileProcess module": [[9, "module-pysrc.uhdl.core.FileProcess"]], "pysrc.uhdl.core.Function module": [[9, "module-pysrc.uhdl.core.Function"]], "pysrc.uhdl.core.InternalTool module": [[9, "module-pysrc.uhdl.core.InternalTool"]], "pysrc.uhdl.core.Lint module": [[9, "module-pysrc.uhdl.core.Lint"]], "pysrc.uhdl.core.Operator module": [[9, "module-pysrc.uhdl.core.Operator"]], "pysrc.uhdl.core.Root module": [[9, "module-pysrc.uhdl.core.Root"]], "pysrc.uhdl.core.VComponent module": [[9, "module-pysrc.uhdl.core.VComponent"]], "pysrc.uhdl.core.VFile module": [[9, "module-pysrc.uhdl.core.VFile"]], "pysrc.uhdl.core.Variable module": [[9, "module-pysrc.uhdl.core.Variable"]], "pysrc.test package": [[4, "pysrc-test-package"]], "pysrc.test.test_Component module": [[4, "module-pysrc.test.test_Component"]], "pysrc.test.test_Expression module": [[4, "module-pysrc.test.test_Expression"]], "pysrc.test.test_Function module": [[4, "module-pysrc.test.test_Function"]], "pysrc.test.test_Port module": [[4, "module-pysrc.test.test_Port"]], "pysrc.test.test_Wire module": [[4, "module-pysrc.test.test_Wire"]], "pysrc.test.test_lwnoc module": [[4, "module-pysrc.test.test_lwnoc"]], "pysrc.test.test_name_sys module": [[4, "module-pysrc.test.test_name_sys"]], "pysrc.test.test_quick_start module": [[4, "pysrc-test-test-quick-start-module"]], "pysrc.test.test_run_demo module": [[4, "module-pysrc.test.test_run_demo"]]}, "indexentries": {"pysrc": [[2, "module-pysrc"]], "\u6a21\u5757": [[2, "module-pysrc"], [4, "module-pysrc.test"], [4, "module-pysrc.test.test_Component"], [4, "module-pysrc.test.test_Expression"], [4, "module-pysrc.test.test_Function"], [4, "module-pysrc.test.test_Port"], [4, "module-pysrc.test.test_Wire"], [4, "module-pysrc.test.test_lwnoc"], [4, "module-pysrc.test.test_name_sys"], [4, "module-pysrc.test.test_run_demo"]], "bitstest() \uff08pysrc.test.test_expression.testvariable \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestVariable.BitsTest"]], "caculator\uff08pysrc.test.test_name_sys \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_name_sys.Caculator"]], "errattrmismatchtest() \uff08pysrc.test.test_expression.testvalue \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestValue.ErrAttrMismatchTest"]], "errattrtypewrongtest() \uff08pysrc.test.test_expression.testvalue \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestValue.ErrAttrTypeWrongTest"]], "errbitsinvalidstrtest() \uff08pysrc.test.test_expression.testvalue \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestValue.ErrBitsInvalidStrTest"]], "errbitsoverflowtest() \uff08pysrc.test.test_expression.testvalue \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestValue.ErrBitsOverflowTest"]], "errcutexpsliceinvalidtest() \uff08pysrc.test.test_expression.testvalue \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestValue.ErrCutExpSliceInvalidTest"]], "errexpintypewrongtest() \uff08pysrc.test.test_expression.testvalue \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestValue.ErrExpInTypeWrongTest"]], "errlistexpneedmultioptest() \uff08pysrc.test.test_expression.testvalue \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestValue.ErrListExpNeedMultiOpTest"]], "listexpressiontest() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.ListExpressionTest"]], "multilistexpressiontest() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.MultiListExpressionTest"]], "multisamelistexpressiontest() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.MultiSameListExpressionTest"]], "oneopbitexpressiontest() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.OneOpBitExpressionTest"]], "oneopexpressiontest() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.OneOpExpressionTest"]], "oneopu1expressiontest() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.OneOpU1ExpressionTest"]], "singlevartest() \uff08pysrc.test.test_expression.testvariable \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestVariable.SingleVarTest"]], "testassign\uff08pysrc.test.test_function \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_Function.TestAssign"]], "testbasic\uff08pysrc.test.test_lwnoc \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic"]], "testcomponent\uff08pysrc.test.test_component \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_Component.TestComponent"]], "testexpression\uff08pysrc.test.test_expression \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_Expression.TestExpression"]], "testnamesys\uff08pysrc.test.test_name_sys \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_name_sys.TestNameSys"]], "testport\uff08pysrc.test.test_port \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_Port.TestPort"]], "testrundemo\uff08pysrc.test.test_run_demo \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_run_demo.TestRunDemo"]], "testvalue\uff08pysrc.test.test_expression \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_Expression.TestValue"]], "testvariable\uff08pysrc.test.test_expression \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_Expression.TestVariable"]], "testwire\uff08pysrc.test.test_wire \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_Wire.TestWire"]], "twoopexpressiontest() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.TwoOpExpressionTest"]], "twosameopbitexpressiontest() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.TwoSameOpBitExpressionTest"]], "twosameopexpressiontest() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.TwoSameOpExpressionTest"]], "twosameopu1expressiontest() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.TwoSameOpU1ExpressionTest"]], "uniquenametestwrapper\uff08pysrc.test.test_name_sys \u4e2d\u7684\u7c7b\uff09": [[4, "pysrc.test.test_name_sys.UniqueNameTestWrapper"]], "waitexception() \uff08pysrc.test.test_expression.testvalue \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestValue.WaitException"]], "pysrc.test": [[4, "module-pysrc.test"]], "pysrc.test.test_component": [[4, "module-pysrc.test.test_Component"]], "pysrc.test.test_expression": [[4, "module-pysrc.test.test_Expression"]], "pysrc.test.test_function": [[4, "module-pysrc.test.test_Function"]], "pysrc.test.test_port": [[4, "module-pysrc.test.test_Port"]], "pysrc.test.test_wire": [[4, "module-pysrc.test.test_Wire"]], "pysrc.test.test_lwnoc": [[4, "module-pysrc.test.test_lwnoc"]], "pysrc.test.test_name_sys": [[4, "module-pysrc.test.test_name_sys"]], "pysrc.test.test_run_demo": [[4, "module-pysrc.test.test_run_demo"]], "setup_port_contain_any() \uff08pysrc.test.test_port.testport \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Port.TestPort.setup_port_contain_any"]], "test_and() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_And"]], "test_andlist() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_AndList"]], "test_assign_right() \uff08pysrc.test.test_function.testassign \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Function.TestAssign.test_Assign_Right"]], "test_assign_wrong() \uff08pysrc.test.test_function.testassign \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Function.TestAssign.test_Assign_Wrong"]], "test_bitand() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_BitAnd"]], "test_bitandlist() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_BitAndList"]], "test_bitor() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_BitOr"]], "test_bitorlist() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_BitOrList"]], "test_bitxnor() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_BitXnor"]], "test_bitxnorlist() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_BitXnorList"]], "test_bitxor() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_BitXor"]], "test_bitxorlist() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_BitXorList"]], "test_combine() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_Combine"]], "test_crossbar() \uff08pysrc.test.test_run_demo.testrundemo \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_run_demo.TestRunDemo.test_Crossbar"]], "test_cut() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_Cut"]], "test_equal() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_Equal"]], "test_greater() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_Greater"]], "test_greaterequal() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_GreaterEqual"]], "test_inout() \uff08pysrc.test.test_expression.testvariable \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestVariable.test_Inout"]], "test_input() \uff08pysrc.test.test_expression.testvariable \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestVariable.test_Input"]], "test_inverse() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_Inverse"]], "test_less() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_Less"]], "test_lessequal() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_LessEqual"]], "test_lwnocarb() \uff08pysrc.test.test_lwnoc.testbasic \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic.test_LwnocArb"]], "test_lwnocdec() \uff08pysrc.test.test_lwnoc.testbasic \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic.test_LwnocDec"]], "test_lwnocwrap() \uff08pysrc.test.test_lwnoc.testbasic \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic.test_LwnocWrap"]], "test_lwnocxbar() \uff08pysrc.test.test_lwnoc.testbasic \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic.test_LwnocXbar"]], "test_network() \uff08pysrc.test.test_lwnoc.testbasic \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic.test_Network"]], "test_not() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_Not"]], "test_notequal() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_NotEqual"]], "test_or() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_Or"]], "test_orlist() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_OrList"]], "test_output() \uff08pysrc.test.test_expression.testvariable \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestVariable.test_Output"]], "test_parameter() \uff08pysrc.test.test_expression.testvariable \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestVariable.test_Parameter"]], "test_reg() \uff08pysrc.test.test_expression.testvariable \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestVariable.test_Reg"]], "test_sint() \uff08pysrc.test.test_expression.testvariable \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestVariable.test_SInt"]], "test_selfand() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_SelfAnd"]], "test_selfor() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_SelfOr"]], "test_selfxnor() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_SelfXnor"]], "test_selfxor() \uff08pysrc.test.test_expression.testexpression \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestExpression.test_SelfXor"]], "test_uint() \uff08pysrc.test.test_expression.testvariable \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestVariable.test_UInt"]], "test_wire() \uff08pysrc.test.test_expression.testvariable \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Expression.TestVariable.test_Wire"]], "test_basic_darb() \uff08pysrc.test.test_lwnoc.testbasic \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic.test_basic_DArb"]], "test_basic_ddec() \uff08pysrc.test.test_lwnoc.testbasic \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic.test_basic_DDec"]], "test_basic_dmst() \uff08pysrc.test.test_lwnoc.testbasic \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic.test_basic_DMst"]], "test_basic_dslv() \uff08pysrc.test.test_lwnoc.testbasic \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic.test_basic_DSlv"]], "test_basic_dwrap() \uff08pysrc.test.test_lwnoc.testbasic \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_lwnoc.TestBasic.test_basic_DWrap"]], "test_define() \uff08pysrc.test.test_component.testcomponent \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Component.TestComponent.test_define"]], "test_define() \uff08pysrc.test.test_port.testport \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Port.TestPort.test_define"]], "test_define() \uff08pysrc.test.test_wire.testwire \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Wire.TestWire.test_define"]], "test_equal() \uff08pysrc.test.test_wire.testwire \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Wire.TestWire.test_equal"]], "test_equal_contain_any() \uff08pysrc.test.test_port.testport \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Port.TestPort.test_equal_contain_any"]], "test_equal_contain_wire() \uff08pysrc.test.test_port.testport \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Port.TestPort.test_equal_contain_wire"]], "test_expand() \uff08pysrc.test.test_port.testport \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Port.TestPort.test_expand"]], "test_expand() \uff08pysrc.test.test_wire.testwire \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Wire.TestWire.test_expand"]], "test_match() \uff08pysrc.test.test_wire.testwire \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Wire.TestWire.test_match"]], "test_not_equal_by_direction() \uff08pysrc.test.test_wire.testwire \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Wire.TestWire.test_not_equal_by_direction"]], "test_not_equal_by_name() \uff08pysrc.test.test_wire.testwire \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Wire.TestWire.test_not_equal_by_name"]], "test_not_equal_by_width() \uff08pysrc.test.test_wire.testwire \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Wire.TestWire.test_not_equal_by_width"]], "test_not_equal_contain_any() \uff08pysrc.test.test_port.testport \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Port.TestPort.test_not_equal_contain_any"]], "test_not_equal_contain_wire() \uff08pysrc.test.test_port.testport \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Port.TestPort.test_not_equal_contain_wire"]], "test_one_direction() \uff08pysrc.test.test_wire.testwire \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Wire.TestWire.test_one_direction"]], "test_reverse() \uff08pysrc.test.test_wire.testwire \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Wire.TestWire.test_reverse"]], "test_reverse_contain_any() \uff08pysrc.test.test_port.testport \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Port.TestPort.test_reverse_contain_any"]], "test_reverse_contain_wire() \uff08pysrc.test.test_port.testport \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_Port.TestPort.test_reverse_contain_wire"]], "test_unique_name() \uff08pysrc.test.test_name_sys.testnamesys \u65b9\u6cd5\uff09": [[4, "pysrc.test.test_name_sys.TestNameSys.test_unique_name"]]}})