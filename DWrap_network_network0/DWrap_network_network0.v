//==========================================================================================================================
//Key is used to ensure the consistency of file version and content, and cannot be modified.
//Version Control is the version number written when the file is generated and cannot be modified.
//ToolMessage is used to record related information of any tool that has processed the file and cannot be manually modified.
//UserMessage is used by the user to write any information, which can be modified in any way.
//Content is the actual payload of the file.
//Parameter is the additional parameter information carried by the file and cannot be modified in any way.

//Key is generated by the hash of Version Control, Content and Parameter to ensure the consistency of the file.
//These three parts do not allow any individual modification
//==========================================================================================================================


//[UHDL]Key Start [md5:6edef596fb18fcf0ff242f2fa579116b]
//Version Control Hash: 3accddf64b1dd03abeb9b0b3e5a7ba44
//Content Hash: f4bbe1ffd62f0221490ed5037db4e380
//Parameter Hash: d41d8cd98f00b204e9800998ecf8427e
//[UHDL]Key End [md5:6edef596fb18fcf0ff242f2fa579116b]

//[UHDL]Version Control Start [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]
//[UHDL]Version Control Version:1.0.1
//[UHDL]Version Control End [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]

//[UHDL]Tool Message Start [md5:cda437c32f04161dc20423f9c5e5b253]
//Written by UHDL in 2022-08-11 22:09:42
//[UHDL]Tool Message End [md5:cda437c32f04161dc20423f9c5e5b253]

//[UHDL]User Message Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]User Message End [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Content Start [md5:f4bbe1ffd62f0221490ed5037db4e380]
module DWrap_network_network0 (
	input         D_S0_in0_vld  ,
	output        D_S0_in0_rdy  ,
	input         D_S0_in0_head ,
	input         D_S0_in0_tail ,
	input  [31:0] D_S0_in0_pld  ,
	input  [2:0]  D_S0_in0_id   ,
	input         D_S1_in0_vld  ,
	output        D_S1_in0_rdy  ,
	input         D_S1_in0_head ,
	input         D_S1_in0_tail ,
	input  [31:0] D_S1_in0_pld  ,
	input  [2:0]  D_S1_in0_id   ,
	input         D_S2_in0_vld  ,
	output        D_S2_in0_rdy  ,
	input         D_S2_in0_head ,
	input         D_S2_in0_tail ,
	input  [31:0] D_S2_in0_pld  ,
	input  [2:0]  D_S2_in0_id   ,
	output        D_M0_out0_vld ,
	input         D_M0_out0_rdy ,
	output        D_M0_out0_head,
	output        D_M0_out0_tail,
	output [31:0] D_M0_out0_pld ,
	output [2:0]  D_M0_out0_id  ,
	output        D_M1_out0_vld ,
	input         D_M1_out0_rdy ,
	output        D_M1_out0_head,
	output        D_M1_out0_tail,
	output [31:0] D_M1_out0_pld ,
	output [2:0]  D_M1_out0_id  );
	wire        S0_in0_vld  ;
	wire        S0_in0_rdy  ;
	wire        S0_in0_head ;
	wire        S0_in0_tail ;
	wire [31:0] S0_in0_pld  ;
	wire [2:0]  S0_in0_id   ;
	wire        S0_out0_vld ;
	wire        S0_out0_rdy ;
	wire        S0_out0_head;
	wire        S0_out0_tail;
	wire [31:0] S0_out0_pld ;
	wire [2:0]  S0_out0_id  ;
	wire        S1_in0_vld  ;
	wire        S1_in0_rdy  ;
	wire        S1_in0_head ;
	wire        S1_in0_tail ;
	wire [31:0] S1_in0_pld  ;
	wire [2:0]  S1_in0_id   ;
	wire        S1_out0_vld ;
	wire        S1_out0_rdy ;
	wire        S1_out0_head;
	wire        S1_out0_tail;
	wire [31:0] S1_out0_pld ;
	wire [2:0]  S1_out0_id  ;
	wire        S2_in0_vld  ;
	wire        S2_in0_rdy  ;
	wire        S2_in0_head ;
	wire        S2_in0_tail ;
	wire [31:0] S2_in0_pld  ;
	wire [2:0]  S2_in0_id   ;
	wire        S2_out0_vld ;
	wire        S2_out0_rdy ;
	wire        S2_out0_head;
	wire        S2_out0_tail;
	wire [31:0] S2_out0_pld ;
	wire [2:0]  S2_out0_id  ;
	wire        A0_clk      ;
	wire        A0_rst_n    ;
	wire        A0_in0_vld  ;
	wire        A0_in0_rdy  ;
	wire        A0_in0_head ;
	wire        A0_in0_tail ;
	wire [31:0] A0_in0_pld  ;
	wire [2:0]  A0_in0_id   ;
	wire        A0_in1_vld  ;
	wire        A0_in1_rdy  ;
	wire        A0_in1_head ;
	wire        A0_in1_tail ;
	wire [31:0] A0_in1_pld  ;
	wire [2:0]  A0_in1_id   ;
	wire        A0_out0_vld ;
	wire        A0_out0_rdy ;
	wire        A0_out0_head;
	wire        A0_out0_tail;
	wire [31:0] A0_out0_pld ;
	wire [2:0]  A0_out0_id  ;
	wire        D0_out0_vld ;
	wire        D0_out0_rdy ;
	wire        D0_out0_head;
	wire        D0_out0_tail;
	wire [31:0] D0_out0_pld ;
	wire [2:0]  D0_out0_id  ;
	wire        D0_out1_vld ;
	wire        D0_out1_rdy ;
	wire        D0_out1_head;
	wire        D0_out1_tail;
	wire [31:0] D0_out1_pld ;
	wire [2:0]  D0_out1_id  ;
	wire        D0_in0_vld  ;
	wire        D0_in0_rdy  ;
	wire        D0_in0_head ;
	wire        D0_in0_tail ;
	wire [31:0] D0_in0_pld  ;
	wire [2:0]  D0_in0_id   ;
	wire        D1_out0_vld ;
	wire        D1_out0_rdy ;
	wire        D1_out0_head;
	wire        D1_out0_tail;
	wire [31:0] D1_out0_pld ;
	wire [2:0]  D1_out0_id  ;
	wire        D1_out1_vld ;
	wire        D1_out1_rdy ;
	wire        D1_out1_head;
	wire        D1_out1_tail;
	wire [31:0] D1_out1_pld ;
	wire [2:0]  D1_out1_id  ;
	wire        D1_in0_vld  ;
	wire        D1_in0_rdy  ;
	wire        D1_in0_head ;
	wire        D1_in0_tail ;
	wire [31:0] D1_in0_pld  ;
	wire [2:0]  D1_in0_id   ;
	wire        M0_in0_vld  ;
	wire        M0_in0_rdy  ;
	wire        M0_in0_head ;
	wire        M0_in0_tail ;
	wire [31:0] M0_in0_pld  ;
	wire [2:0]  M0_in0_id   ;
	wire        M0_out0_vld ;
	wire        M0_out0_rdy ;
	wire        M0_out0_head;
	wire        M0_out0_tail;
	wire [31:0] M0_out0_pld ;
	wire [2:0]  M0_out0_id  ;
	wire        M1_in0_vld  ;
	wire        M1_in0_rdy  ;
	wire        M1_in0_head ;
	wire        M1_in0_tail ;
	wire [31:0] M1_in0_pld  ;
	wire [2:0]  M1_in0_id   ;
	wire        M1_out0_vld ;
	wire        M1_out0_rdy ;
	wire        M1_out0_head;
	wire        M1_out0_tail;
	wire [31:0] M1_out0_pld ;
	wire [2:0]  M1_out0_id  ;
	wire        A1_clk      ;
	wire        A1_rst_n    ;
	wire        A1_in0_vld  ;
	wire        A1_in0_rdy  ;
	wire        A1_in0_head ;
	wire        A1_in0_tail ;
	wire [31:0] A1_in0_pld  ;
	wire [2:0]  A1_in0_id   ;
	wire        A1_in1_vld  ;
	wire        A1_in1_rdy  ;
	wire        A1_in1_head ;
	wire        A1_in1_tail ;
	wire [31:0] A1_in1_pld  ;
	wire [2:0]  A1_in1_id   ;
	wire        A1_out0_vld ;
	wire        A1_out0_rdy ;
	wire        A1_out0_head;
	wire        A1_out0_tail;
	wire [31:0] A1_out0_pld ;
	wire [2:0]  A1_out0_id  ;
	wire        A2_clk      ;
	wire        A2_rst_n    ;
	wire        A2_in0_vld  ;
	wire        A2_in0_rdy  ;
	wire        A2_in0_head ;
	wire        A2_in0_tail ;
	wire [31:0] A2_in0_pld  ;
	wire [2:0]  A2_in0_id   ;
	wire        A2_in1_vld  ;
	wire        A2_in1_rdy  ;
	wire        A2_in1_head ;
	wire        A2_in1_tail ;
	wire [31:0] A2_in1_pld  ;
	wire [2:0]  A2_in1_id   ;
	wire        A2_out0_vld ;
	wire        A2_out0_rdy ;
	wire        A2_out0_head;
	wire        A2_out0_tail;
	wire [31:0] A2_out0_pld ;
	wire [2:0]  A2_out0_id  ;
	assign D_S0_in0_rdy = S0_in0_rdy;
	
	assign D_S1_in0_rdy = S1_in0_rdy;
	
	assign D_S2_in0_rdy = S2_in0_rdy;
	
	assign D_M0_out0_vld = M0_out0_vld;
	
	assign D_M0_out0_head = M0_out0_head;
	
	assign D_M0_out0_tail = M0_out0_tail;
	
	assign D_M0_out0_pld = M0_out0_pld;
	
	assign D_M0_out0_id = M0_out0_id;
	
	assign D_M1_out0_vld = M1_out0_vld;
	
	assign D_M1_out0_head = M1_out0_head;
	
	assign D_M1_out0_tail = M1_out0_tail;
	
	assign D_M1_out0_pld = M1_out0_pld;
	
	assign D_M1_out0_id = M1_out0_id;
	
	assign S0_in0_vld = D_S0_in0_vld;
	
	assign S0_in0_head = D_S0_in0_head;
	
	assign S0_in0_tail = D_S0_in0_tail;
	
	assign S0_in0_pld = D_S0_in0_pld;
	
	assign S0_in0_id = D_S0_in0_id;
	
	assign S0_out0_rdy = D1_in0_rdy;
	
	assign S1_in0_vld = D_S1_in0_vld;
	
	assign S1_in0_head = D_S1_in0_head;
	
	assign S1_in0_tail = D_S1_in0_tail;
	
	assign S1_in0_pld = D_S1_in0_pld;
	
	assign S1_in0_id = D_S1_in0_id;
	
	assign S1_out0_rdy = A0_in0_rdy;
	
	assign S2_in0_vld = D_S2_in0_vld;
	
	assign S2_in0_head = D_S2_in0_head;
	
	assign S2_in0_tail = D_S2_in0_tail;
	
	assign S2_in0_pld = D_S2_in0_pld;
	
	assign S2_in0_id = D_S2_in0_id;
	
	assign S2_out0_rdy = A0_in1_rdy;
	
	assign A0_in0_vld = S1_out0_vld;
	
	assign A0_in0_head = S1_out0_head;
	
	assign A0_in0_tail = S1_out0_tail;
	
	assign A0_in0_pld = S1_out0_pld;
	
	assign A0_in0_id = S1_out0_id;
	
	assign A0_in1_vld = S2_out0_vld;
	
	assign A0_in1_head = S2_out0_head;
	
	assign A0_in1_tail = S2_out0_tail;
	
	assign A0_in1_pld = S2_out0_pld;
	
	assign A0_in1_id = S2_out0_id;
	
	assign A0_out0_rdy = D0_in0_rdy;
	
	assign D0_out0_rdy = A1_in0_rdy;
	
	assign D0_out1_rdy = A2_in0_rdy;
	
	assign D0_in0_vld = A0_out0_vld;
	
	assign D0_in0_head = A0_out0_head;
	
	assign D0_in0_tail = A0_out0_tail;
	
	assign D0_in0_pld = A0_out0_pld;
	
	assign D0_in0_id = A0_out0_id;
	
	assign D1_out0_rdy = A1_in1_rdy;
	
	assign D1_out1_rdy = A2_in1_rdy;
	
	assign D1_in0_vld = S0_out0_vld;
	
	assign D1_in0_head = S0_out0_head;
	
	assign D1_in0_tail = S0_out0_tail;
	
	assign D1_in0_pld = S0_out0_pld;
	
	assign D1_in0_id = S0_out0_id;
	
	assign M0_in0_vld = A1_out0_vld;
	
	assign M0_in0_head = A1_out0_head;
	
	assign M0_in0_tail = A1_out0_tail;
	
	assign M0_in0_pld = A1_out0_pld;
	
	assign M0_in0_id = A1_out0_id;
	
	assign M0_out0_rdy = D_M0_out0_rdy;
	
	assign M1_in0_vld = A2_out0_vld;
	
	assign M1_in0_head = A2_out0_head;
	
	assign M1_in0_tail = A2_out0_tail;
	
	assign M1_in0_pld = A2_out0_pld;
	
	assign M1_in0_id = A2_out0_id;
	
	assign M1_out0_rdy = D_M1_out0_rdy;
	
	assign A1_in0_vld = D0_out0_vld;
	
	assign A1_in0_head = D0_out0_head;
	
	assign A1_in0_tail = D0_out0_tail;
	
	assign A1_in0_pld = D0_out0_pld;
	
	assign A1_in0_id = D0_out0_id;
	
	assign A1_in1_vld = D1_out0_vld;
	
	assign A1_in1_head = D1_out0_head;
	
	assign A1_in1_tail = D1_out0_tail;
	
	assign A1_in1_pld = D1_out0_pld;
	
	assign A1_in1_id = D1_out0_id;
	
	assign A1_out0_rdy = M0_in0_rdy;
	
	assign A2_in0_vld = D0_out1_vld;
	
	assign A2_in0_head = D0_out1_head;
	
	assign A2_in0_tail = D0_out1_tail;
	
	assign A2_in0_pld = D0_out1_pld;
	
	assign A2_in0_id = D0_out1_id;
	
	assign A2_in1_vld = D1_out1_vld;
	
	assign A2_in1_head = D1_out1_head;
	
	assign A2_in1_tail = D1_out1_tail;
	
	assign A2_in1_pld = D1_out1_pld;
	
	assign A2_in1_id = D1_out1_id;
	
	assign A2_out0_rdy = M1_in0_rdy;
	
	DSlv_node_S0 S0 (
		.in0_vld(S0_in0_vld),
		.in0_rdy(S0_in0_rdy),
		.in0_head(S0_in0_head),
		.in0_tail(S0_in0_tail),
		.in0_pld(S0_in0_pld),
		.in0_id(S0_in0_id),
		.out0_vld(S0_out0_vld),
		.out0_rdy(S0_out0_rdy),
		.out0_head(S0_out0_head),
		.out0_tail(S0_out0_tail),
		.out0_pld(S0_out0_pld),
		.out0_id(S0_out0_id));
	DSlv_node_S1 S1 (
		.in0_vld(S1_in0_vld),
		.in0_rdy(S1_in0_rdy),
		.in0_head(S1_in0_head),
		.in0_tail(S1_in0_tail),
		.in0_pld(S1_in0_pld),
		.in0_id(S1_in0_id),
		.out0_vld(S1_out0_vld),
		.out0_rdy(S1_out0_rdy),
		.out0_head(S1_out0_head),
		.out0_tail(S1_out0_tail),
		.out0_pld(S1_out0_pld),
		.out0_id(S1_out0_id));
	DSlv_node_S2 S2 (
		.in0_vld(S2_in0_vld),
		.in0_rdy(S2_in0_rdy),
		.in0_head(S2_in0_head),
		.in0_tail(S2_in0_tail),
		.in0_pld(S2_in0_pld),
		.in0_id(S2_in0_id),
		.out0_vld(S2_out0_vld),
		.out0_rdy(S2_out0_rdy),
		.out0_head(S2_out0_head),
		.out0_tail(S2_out0_tail),
		.out0_pld(S2_out0_pld),
		.out0_id(S2_out0_id));
	DArb_node_A0 A0 (
		.clk(A0_clk),
		.rst_n(A0_rst_n),
		.in0_vld(A0_in0_vld),
		.in0_rdy(A0_in0_rdy),
		.in0_head(A0_in0_head),
		.in0_tail(A0_in0_tail),
		.in0_pld(A0_in0_pld),
		.in0_id(A0_in0_id),
		.in1_vld(A0_in1_vld),
		.in1_rdy(A0_in1_rdy),
		.in1_head(A0_in1_head),
		.in1_tail(A0_in1_tail),
		.in1_pld(A0_in1_pld),
		.in1_id(A0_in1_id),
		.out0_vld(A0_out0_vld),
		.out0_rdy(A0_out0_rdy),
		.out0_head(A0_out0_head),
		.out0_tail(A0_out0_tail),
		.out0_pld(A0_out0_pld),
		.out0_id(A0_out0_id));
	DDec_node_D0 D0 (
		.out0_vld(D0_out0_vld),
		.out0_rdy(D0_out0_rdy),
		.out0_head(D0_out0_head),
		.out0_tail(D0_out0_tail),
		.out0_pld(D0_out0_pld),
		.out0_id(D0_out0_id),
		.out1_vld(D0_out1_vld),
		.out1_rdy(D0_out1_rdy),
		.out1_head(D0_out1_head),
		.out1_tail(D0_out1_tail),
		.out1_pld(D0_out1_pld),
		.out1_id(D0_out1_id),
		.in0_vld(D0_in0_vld),
		.in0_rdy(D0_in0_rdy),
		.in0_head(D0_in0_head),
		.in0_tail(D0_in0_tail),
		.in0_pld(D0_in0_pld),
		.in0_id(D0_in0_id));
	DDec_node_D1 D1 (
		.out0_vld(D1_out0_vld),
		.out0_rdy(D1_out0_rdy),
		.out0_head(D1_out0_head),
		.out0_tail(D1_out0_tail),
		.out0_pld(D1_out0_pld),
		.out0_id(D1_out0_id),
		.out1_vld(D1_out1_vld),
		.out1_rdy(D1_out1_rdy),
		.out1_head(D1_out1_head),
		.out1_tail(D1_out1_tail),
		.out1_pld(D1_out1_pld),
		.out1_id(D1_out1_id),
		.in0_vld(D1_in0_vld),
		.in0_rdy(D1_in0_rdy),
		.in0_head(D1_in0_head),
		.in0_tail(D1_in0_tail),
		.in0_pld(D1_in0_pld),
		.in0_id(D1_in0_id));
	DMst_node_M0 M0 (
		.in0_vld(M0_in0_vld),
		.in0_rdy(M0_in0_rdy),
		.in0_head(M0_in0_head),
		.in0_tail(M0_in0_tail),
		.in0_pld(M0_in0_pld),
		.in0_id(M0_in0_id),
		.out0_vld(M0_out0_vld),
		.out0_rdy(M0_out0_rdy),
		.out0_head(M0_out0_head),
		.out0_tail(M0_out0_tail),
		.out0_pld(M0_out0_pld),
		.out0_id(M0_out0_id));
	DMst_node_M1 M1 (
		.in0_vld(M1_in0_vld),
		.in0_rdy(M1_in0_rdy),
		.in0_head(M1_in0_head),
		.in0_tail(M1_in0_tail),
		.in0_pld(M1_in0_pld),
		.in0_id(M1_in0_id),
		.out0_vld(M1_out0_vld),
		.out0_rdy(M1_out0_rdy),
		.out0_head(M1_out0_head),
		.out0_tail(M1_out0_tail),
		.out0_pld(M1_out0_pld),
		.out0_id(M1_out0_id));
	DArb_node_A1 A1 (
		.clk(A1_clk),
		.rst_n(A1_rst_n),
		.in0_vld(A1_in0_vld),
		.in0_rdy(A1_in0_rdy),
		.in0_head(A1_in0_head),
		.in0_tail(A1_in0_tail),
		.in0_pld(A1_in0_pld),
		.in0_id(A1_in0_id),
		.in1_vld(A1_in1_vld),
		.in1_rdy(A1_in1_rdy),
		.in1_head(A1_in1_head),
		.in1_tail(A1_in1_tail),
		.in1_pld(A1_in1_pld),
		.in1_id(A1_in1_id),
		.out0_vld(A1_out0_vld),
		.out0_rdy(A1_out0_rdy),
		.out0_head(A1_out0_head),
		.out0_tail(A1_out0_tail),
		.out0_pld(A1_out0_pld),
		.out0_id(A1_out0_id));
	DArb_node_A2 A2 (
		.clk(A2_clk),
		.rst_n(A2_rst_n),
		.in0_vld(A2_in0_vld),
		.in0_rdy(A2_in0_rdy),
		.in0_head(A2_in0_head),
		.in0_tail(A2_in0_tail),
		.in0_pld(A2_in0_pld),
		.in0_id(A2_in0_id),
		.in1_vld(A2_in1_vld),
		.in1_rdy(A2_in1_rdy),
		.in1_head(A2_in1_head),
		.in1_tail(A2_in1_tail),
		.in1_pld(A2_in1_pld),
		.in1_id(A2_in1_id),
		.out0_vld(A2_out0_vld),
		.out0_rdy(A2_out0_rdy),
		.out0_head(A2_out0_head),
		.out0_tail(A2_out0_tail),
		.out0_pld(A2_out0_pld),
		.out0_id(A2_out0_id));

endmodule
//[UHDL]Content End [md5:f4bbe1ffd62f0221490ed5037db4e380]

//[UHDL]Parameter Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Parameter End [md5:d41d8cd98f00b204e9800998ecf8427e]

