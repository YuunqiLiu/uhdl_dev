//==========================================================================================================================
//Key is used to ensure the consistency of file version and content, and cannot be modified.
//Version Control is the version number written when the file is generated and cannot be modified.
//ToolMessage is used to record related information of any tool that has processed the file and cannot be manually modified.
//UserMessage is used by the user to write any information, which can be modified in any way.
//Content is the actual payload of the file.
//Parameter is the additional parameter information carried by the file and cannot be modified in any way.

//Key is generated by the hash of Version Control, Content and Parameter to ensure the consistency of the file.
//These three parts do not allow any individual modification
//==========================================================================================================================


//[UHDL]Key Start [md5:0971e08407f89a40770cab062141d7c9]
//Version Control Hash: 3accddf64b1dd03abeb9b0b3e5a7ba44
//Content Hash: 37655092af6c852e1d98de54952bf291
//Parameter Hash: d41d8cd98f00b204e9800998ecf8427e
//[UHDL]Key End [md5:0971e08407f89a40770cab062141d7c9]

//[UHDL]Version Control Start [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]
//[UHDL]Version Control Version:1.0.1
//[UHDL]Version Control End [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]

//[UHDL]Tool Message Start [md5:7fdb95577de2f8a4c8b1fe28eee43da8]
//Written by UHDL in 2022-08-10 23:16:38
//[UHDL]Tool Message End [md5:7fdb95577de2f8a4c8b1fe28eee43da8]

//[UHDL]User Message Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]User Message End [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Content Start [md5:37655092af6c852e1d98de54952bf291]
module DDec_node_D1 (
	output        out0_vld ,
	input         out0_rdy ,
	output        out0_head,
	output        out0_tail,
	output [31:0] out0_pld ,
	output [2:0]  out0_id  ,
	output        out1_vld ,
	input         out1_rdy ,
	output        out1_head,
	output        out1_tail,
	output [31:0] out1_pld ,
	output [2:0]  out1_id  ,
	input         in0_vld  ,
	output        in0_rdy  ,
	input         in0_head ,
	input         in0_tail ,
	input  [31:0] in0_pld  ,
	input  [2:0]  in0_id   );
	wire [0:0] id_hit_p0_id1;
	wire [0:0] id_hit_p0_id2;
	wire [0:0] id_hit_p0_id3;
	wire [0:0] sel_bit0     ;
	wire [0:0] id_hit_p1_id4;
	wire [0:0] id_hit_p1_id5;
	wire [0:0] id_hit_p1_id6;
	wire [0:0] sel_bit1     ;
	assign out0_vld = (sel_bit0 && in0_vld);
	
	assign out0_head = in0_head;
	
	assign out0_tail = in0_tail;
	
	assign out0_pld = in0_pld;
	
	assign out0_id = in0_id;
	
	assign out1_vld = (sel_bit1 && in0_vld);
	
	assign out1_head = in0_head;
	
	assign out1_tail = in0_tail;
	
	assign out1_pld = in0_pld;
	
	assign out1_id = in0_id;
	
	assign in0_rdy = ((sel_bit0 && out0_rdy) || (sel_bit1 && out1_rdy));
	
	assign id_hit_p0_id1 = (in0_id == 3'b1);
	
	assign id_hit_p0_id2 = (in0_id == 3'b10);
	
	assign id_hit_p0_id3 = (in0_id == 3'b11);
	
	assign sel_bit0 = (id_hit_p0_id1 | id_hit_p0_id2 | id_hit_p0_id3);
	
	assign id_hit_p1_id4 = (in0_id == 3'b100);
	
	assign id_hit_p1_id5 = (in0_id == 3'b101);
	
	assign id_hit_p1_id6 = (in0_id == 3'b110);
	
	assign sel_bit1 = (id_hit_p1_id4 | id_hit_p1_id5 | id_hit_p1_id6);
	

endmodule
//[UHDL]Content End [md5:37655092af6c852e1d98de54952bf291]

//[UHDL]Parameter Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Parameter End [md5:d41d8cd98f00b204e9800998ecf8427e]

