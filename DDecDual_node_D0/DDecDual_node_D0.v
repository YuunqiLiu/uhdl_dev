//==========================================================================================================================
//Key is used to ensure the consistency of file version and content, and cannot be modified.
//Version Control is the version number written when the file is generated and cannot be modified.
//ToolMessage is used to record related information of any tool that has processed the file and cannot be manually modified.
//UserMessage is used by the user to write any information, which can be modified in any way.
//Content is the actual payload of the file.
//Parameter is the additional parameter information carried by the file and cannot be modified in any way.

//Key is generated by the hash of Version Control, Content and Parameter to ensure the consistency of the file.
//These three parts do not allow any individual modification
//==========================================================================================================================


//[UHDL]Key Start [md5:efa0585954b1456d852c00d1f7341646]
//Version Control Hash: 3accddf64b1dd03abeb9b0b3e5a7ba44
//Content Hash: bc4788983d4a531b41dd0749fe2c13b2
//Parameter Hash: d41d8cd98f00b204e9800998ecf8427e
//[UHDL]Key End [md5:efa0585954b1456d852c00d1f7341646]

//[UHDL]Version Control Start [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]
//[UHDL]Version Control Version:1.0.1
//[UHDL]Version Control End [md5:3accddf64b1dd03abeb9b0b3e5a7ba44]

//[UHDL]Tool Message Start [md5:d03a6bee689749cf96e88bd529d1e8c4]
//Written by UHDL in 2022-08-27 10:08:58
//[UHDL]Tool Message End [md5:d03a6bee689749cf96e88bd529d1e8c4]

//[UHDL]User Message Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]User Message End [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Content Start [md5:bc4788983d4a531b41dd0749fe2c13b2]
module DDecDual_node_D0 (
	input          clk            ,
	input          rst_n          ,
	output         out0_req_vld   ,
	output         out1_req_vld   ,
	input          out0_req_rdy   ,
	input          out1_req_rdy   ,
	output         out0_req_head  ,
	output         out1_req_head  ,
	output         out0_req_tail  ,
	output         out1_req_tail  ,
	output [359:0] out0_req_pld   ,
	output [359:0] out1_req_pld   ,
	output [3:0]   out0_req_mst_id,
	output [3:0]   out1_req_mst_id,
	output [3:0]   out0_req_slv_id,
	output [3:0]   out1_req_slv_id,
	input          out0_ack_vld   ,
	input          out1_ack_vld   ,
	output         out0_ack_rdy   ,
	output         out1_ack_rdy   ,
	input          out0_ack_head  ,
	input          out1_ack_head  ,
	input          out0_ack_tail  ,
	input          out1_ack_tail  ,
	input  [9:0]   out0_ack_pld   ,
	input  [9:0]   out1_ack_pld   ,
	input  [3:0]   out0_ack_mst_id,
	input  [3:0]   out1_ack_mst_id,
	input  [3:0]   out0_ack_slv_id,
	input  [3:0]   out1_ack_slv_id,
	input          in0_req_vld    ,
	output         in0_req_rdy    ,
	input          in0_req_head   ,
	input          in0_req_tail   ,
	input  [359:0] in0_req_pld    ,
	input  [3:0]   in0_req_mst_id ,
	input  [3:0]   in0_req_slv_id ,
	output         in0_ack_vld    ,
	input          in0_ack_rdy    ,
	output         in0_ack_head   ,
	output         in0_ack_tail   ,
	output [9:0]   in0_ack_pld    ,
	output [3:0]   in0_ack_mst_id ,
	output [3:0]   in0_ack_slv_id );
	wire         dec_out0_vld   ;
	wire         dec_out1_vld   ;
	wire         dec_out0_rdy   ;
	wire         dec_out1_rdy   ;
	wire         dec_out0_head  ;
	wire         dec_out1_head  ;
	wire         dec_out0_tail  ;
	wire         dec_out1_tail  ;
	wire [359:0] dec_out0_pld   ;
	wire [359:0] dec_out1_pld   ;
	wire [3:0]   dec_out0_mst_id;
	wire [3:0]   dec_out1_mst_id;
	wire [3:0]   dec_out0_slv_id;
	wire [3:0]   dec_out1_slv_id;
	wire         dec_in0_vld    ;
	wire         dec_in0_rdy    ;
	wire         dec_in0_head   ;
	wire         dec_in0_tail   ;
	wire [359:0] dec_in0_pld    ;
	wire [3:0]   dec_in0_mst_id ;
	wire [3:0]   dec_in0_slv_id ;
	wire         arb_clk        ;
	wire         arb_rst_n      ;
	wire         arb_in0_vld    ;
	wire         arb_in1_vld    ;
	wire         arb_in0_rdy    ;
	wire         arb_in1_rdy    ;
	wire         arb_in0_head   ;
	wire         arb_in1_head   ;
	wire         arb_in0_tail   ;
	wire         arb_in1_tail   ;
	wire [9:0]   arb_in0_pld    ;
	wire [9:0]   arb_in1_pld    ;
	wire [3:0]   arb_in0_mst_id ;
	wire [3:0]   arb_in1_mst_id ;
	wire [3:0]   arb_in0_slv_id ;
	wire [3:0]   arb_in1_slv_id ;
	wire         arb_out0_vld   ;
	wire         arb_out0_rdy   ;
	wire         arb_out0_head  ;
	wire         arb_out0_tail  ;
	wire [9:0]   arb_out0_pld   ;
	wire [3:0]   arb_out0_mst_id;
	wire [3:0]   arb_out0_slv_id;
	assign out0_req_vld = dec_out0_vld;
	
	assign out1_req_vld = dec_out1_vld;
	
	assign out0_req_head = dec_out0_head;
	
	assign out1_req_head = dec_out1_head;
	
	assign out0_req_tail = dec_out0_tail;
	
	assign out1_req_tail = dec_out1_tail;
	
	assign out0_req_pld = dec_out0_pld;
	
	assign out1_req_pld = dec_out1_pld;
	
	assign out0_req_mst_id = dec_out0_mst_id;
	
	assign out1_req_mst_id = dec_out1_mst_id;
	
	assign out0_req_slv_id = dec_out0_slv_id;
	
	assign out1_req_slv_id = dec_out1_slv_id;
	
	assign out0_ack_rdy = arb_in0_rdy;
	
	assign out1_ack_rdy = arb_in1_rdy;
	
	assign in0_req_rdy = dec_in0_rdy;
	
	assign in0_ack_vld = arb_out0_vld;
	
	assign in0_ack_head = arb_out0_head;
	
	assign in0_ack_tail = arb_out0_tail;
	
	assign in0_ack_pld = arb_out0_pld;
	
	assign in0_ack_mst_id = arb_out0_mst_id;
	
	assign in0_ack_slv_id = arb_out0_slv_id;
	
	assign dec_out0_rdy = out0_req_rdy;
	
	assign dec_out1_rdy = out1_req_rdy;
	
	assign dec_in0_vld = in0_req_vld;
	
	assign dec_in0_head = in0_req_head;
	
	assign dec_in0_tail = in0_req_tail;
	
	assign dec_in0_pld = in0_req_pld;
	
	assign dec_in0_mst_id = in0_req_mst_id;
	
	assign dec_in0_slv_id = in0_req_slv_id;
	
	assign arb_in0_vld = out0_ack_vld;
	
	assign arb_in1_vld = out1_ack_vld;
	
	assign arb_in0_head = out0_ack_head;
	
	assign arb_in1_head = out1_ack_head;
	
	assign arb_in0_tail = out0_ack_tail;
	
	assign arb_in1_tail = out1_ack_tail;
	
	assign arb_in0_pld = out0_ack_pld;
	
	assign arb_in1_pld = out1_ack_pld;
	
	assign arb_in0_mst_id = out0_ack_mst_id;
	
	assign arb_in1_mst_id = out1_ack_mst_id;
	
	assign arb_in0_slv_id = out0_ack_slv_id;
	
	assign arb_in1_slv_id = out1_ack_slv_id;
	
	assign arb_out0_rdy = in0_ack_rdy;
	
	DDec_node_D0_pld_width_360_id_type_mst dec (
		.out0_vld(dec_out0_vld),
		.out1_vld(dec_out1_vld),
		.out0_rdy(dec_out0_rdy),
		.out1_rdy(dec_out1_rdy),
		.out0_head(dec_out0_head),
		.out1_head(dec_out1_head),
		.out0_tail(dec_out0_tail),
		.out1_tail(dec_out1_tail),
		.out0_pld(dec_out0_pld),
		.out1_pld(dec_out1_pld),
		.out0_mst_id(dec_out0_mst_id),
		.out1_mst_id(dec_out1_mst_id),
		.out0_slv_id(dec_out0_slv_id),
		.out1_slv_id(dec_out1_slv_id),
		.in0_vld(dec_in0_vld),
		.in0_rdy(dec_in0_rdy),
		.in0_head(dec_in0_head),
		.in0_tail(dec_in0_tail),
		.in0_pld(dec_in0_pld),
		.in0_mst_id(dec_in0_mst_id),
		.in0_slv_id(dec_in0_slv_id));
	DArb_node_D0_pld_width_10_id_type_mst arb (
		.clk(arb_clk),
		.rst_n(arb_rst_n),
		.in0_vld(arb_in0_vld),
		.in1_vld(arb_in1_vld),
		.in0_rdy(arb_in0_rdy),
		.in1_rdy(arb_in1_rdy),
		.in0_head(arb_in0_head),
		.in1_head(arb_in1_head),
		.in0_tail(arb_in0_tail),
		.in1_tail(arb_in1_tail),
		.in0_pld(arb_in0_pld),
		.in1_pld(arb_in1_pld),
		.in0_mst_id(arb_in0_mst_id),
		.in1_mst_id(arb_in1_mst_id),
		.in0_slv_id(arb_in0_slv_id),
		.in1_slv_id(arb_in1_slv_id),
		.out0_vld(arb_out0_vld),
		.out0_rdy(arb_out0_rdy),
		.out0_head(arb_out0_head),
		.out0_tail(arb_out0_tail),
		.out0_pld(arb_out0_pld),
		.out0_mst_id(arb_out0_mst_id),
		.out0_slv_id(arb_out0_slv_id));

endmodule
//[UHDL]Content End [md5:bc4788983d4a531b41dd0749fe2c13b2]

//[UHDL]Parameter Start [md5:d41d8cd98f00b204e9800998ecf8427e]

//[UHDL]Parameter End [md5:d41d8cd98f00b204e9800998ecf8427e]

